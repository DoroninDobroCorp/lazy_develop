# –§–∞–π–ª: sloth_core.py
import vertexai
from vertexai.generative_models import GenerativeModel, HarmCategory, HarmBlockThreshold
import google.generativeai as genai
import os
from colors import Colors

# --- –ù–ê–°–¢–†–û–ô–ö–ò –Ø–î–†–ê ---
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY", "REDACTED_GOOGLE_API_KEY")
GOOGLE_CLOUD_PROJECT = "useful-gearbox-464618-v3"
GOOGLE_CLOUD_LOCATION = "us-central1"
MODEL_NAME = "gemini-2.5-pro"
API_TIMEOUT_SECONDS = 600
ALLOWED_COMMANDS = (
    "sed", "rm", "mv", "touch", "mkdir", "npm", "npx", "yarn", "pnpm", "git", "echo", "./", "cat"
)

MODEL_PRICING = {
    "gemini-2.5-pro": {
        "input": {
            "tiers": [
                {"up_to": 200000, "price": 1.25},
                {"up_to": float('inf'), "price": 2.50}
            ]
        },
        "output": {
            "tiers": [
                {"up_to": 200000, "price": 10.00},
                {"up_to": float('inf'), "price": 15.00}
            ]
        }
    },
    "gemini-1.5-pro-latest": {
        "input": { "tiers": [{"up_to": float('inf'), "price": 3.50}] },
        "output": { "tiers": [{"up_to": float('inf'), "price": 10.50}] }
    }
}

# --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è API, —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ —è–¥—Ä–æ–º ---
model = None
ACTIVE_API_SERVICE = "N/A"
GOOGLE_AI_HAS_FAILED_THIS_SESSION = False

def initialize_model():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ–¥–µ–ª—å Gemini."""
    global model, ACTIVE_API_SERVICE, GOOGLE_AI_HAS_FAILED_THIS_SESSION

    print(f"{Colors.CYAN}‚öôÔ∏è  –õ–û–ì: –ù–∞—á–∏–Ω–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é. –ú–æ–¥–µ–ª—å: {MODEL_NAME}{Colors.ENDC}")
    generation_config = {"temperature": 1, "top_p": 1, "top_k": 1, "max_output_tokens": 32768}

    if not GOOGLE_AI_HAS_FAILED_THIS_SESSION and GOOGLE_API_KEY:
        print(f"{Colors.CYAN}üîë –õ–û–ì: –ü—Ä–æ–±—É—é –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: Google AI (API Key)...{Colors.ENDC}")
        try:
            genai.configure(api_key=GOOGLE_API_KEY)
            model = genai.GenerativeModel(
                model_name=MODEL_NAME,
                generation_config=generation_config,
                safety_settings={'HARM_CATEGORY_HARASSMENT': 'block_medium_and_above', 'HARM_CATEGORY_HATE_SPEECH': 'block_medium_and_above', 'HARM_CATEGORY_SEXUALLY_EXPLICIT': 'block_medium_and_above', 'HARM_CATEGORY_DANGEROUS_CONTENT': 'block_none'}
            )
            model.generate_content("test", request_options={"timeout": 60})
            ACTIVE_API_SERVICE = "Google AI (API Key)"
            print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –£—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ {ACTIVE_API_SERVICE}.{Colors.ENDC}")
            return
        except Exception as e:
            print(f"{Colors.WARNING}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Google AI API Key: {e}{Colors.ENDC}")
            print(f"{Colors.CYAN}üîÑ –õ–û–ì: –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç (Vertex AI)...{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            model = None

    if GOOGLE_AI_HAS_FAILED_THIS_SESSION:
         print(f"{Colors.CYAN}üî© –õ–û–ì: –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Vertex AI...{Colors.ENDC}")
    else:
         print(f"{Colors.CYAN}üîë –õ–û–ì: API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É—é Vertex AI.{Colors.ENDC}")

    try:
        vertexai.init(project=GOOGLE_CLOUD_PROJECT, location=GOOGLE_CLOUD_LOCATION)
        model = GenerativeModel(
             model_name=MODEL_NAME,
             generation_config=generation_config,
             safety_settings={HarmCategory.HARM_CATEGORY_HARASSMENT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE, HarmCategory.HARM_CATEGORY_HATE_SPEECH: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE, HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE, HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: HarmBlockThreshold.BLOCK_NONE}
        )
        ACTIVE_API_SERVICE = "Vertex AI"
        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: Vertex AI SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.{Colors.ENDC}")
    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å: {e}{Colors.ENDC}")
        model = None
        ACTIVE_API_SERVICE = "N/A"

def get_active_service_details():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å –∏ —Å–µ—Ä–≤–∏—Å –¥–ª—è CLI."""
    return model, ACTIVE_API_SERVICE

def send_request_to_model(model_instance, active_service, prompt_text, iteration_count=0):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–∫–µ–Ω–∞—Ö."""
    global GOOGLE_AI_HAS_FAILED_THIS_SESSION
    try:
        log_header = f"[–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}]" if iteration_count > 0 else "[–≠—Ç–∞–ø –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è]"
        print(f"{Colors.CYAN}üß† –õ–û–ì: {log_header} –ì–æ—Ç–æ–≤–ª—é –∑–∞–ø—Ä–æ—Å –≤ –º–æ–¥–µ–ª—å ({active_service}).{Colors.ENDC}")
        print(f"{Colors.CYAN}‚è≥ –õ–û–ì: –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å... (—Ç–∞–π–º–∞—É—Ç: {API_TIMEOUT_SECONDS} —Å–µ–∫){Colors.ENDC}")
        
        response = None
        if active_service == "Google AI (API Key)":
            request_options = {"timeout": API_TIMEOUT_SECONDS}
            response = model_instance.generate_content(prompt_text, request_options=request_options)
        elif active_service == "Vertex AI":
            response = model_instance.generate_content(prompt_text)
        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å API: {active_service}")
        
        if not response: 
            raise ValueError("–û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø—É—Å—Ç–æ–π.")
            
        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ.{Colors.ENDC}")
        
        return {
            "text": response.text,
            "input_tokens": response.usage_metadata.prompt_token_count,
            "output_tokens": response.usage_metadata.candidates_token_count
        }
    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API ({active_service}): {e}{Colors.ENDC}")
        error_str = str(e).lower()
        if active_service == "Google AI (API Key)" and ("quota" in error_str or "rate limit" in error_str):
            print(f"{Colors.FAIL}üö® –õ–û–ì: –û–ë–ù–ê–†–£–ñ–ï–ù–ê –û–®–ò–ë–ö–ê –ö–í–û–¢–´!{Colors.ENDC}")
            print(f"{Colors.CYAN}   - –ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–æ (–Ω–∞ —ç—Ç—É —Å–µ—Å—Å–∏—é) –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ Vertex AI...{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            initialize_model()
        return None

def get_command_rules(stage='execution'):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞ (–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ).
    """
    base_rules = f"""
**–ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê:**

1.  **–†–∞–±–æ—á–∞—è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:** –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∏–∑ **–∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**. **–ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `cd`. –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö –≤—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π –ø–æ–ª–Ω—ã–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, `backend/src/app.ts` –∏–ª–∏ `./backend/start.sh`).

2.  **–ü–æ–ª–Ω–æ—Ç–∞ –ö–æ–¥–∞:** **–ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã, –º–Ω–æ–≥–æ—Ç–æ—á–∏—è (...) –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (`// ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥`) –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞ –≤ ```bash```. –í—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –ø–æ–ª–Ω—ã–π, –≥–æ—Ç–æ–≤—ã–π –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∫–æ–¥.

3.  **–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã:** `{', '.join(ALLOWED_COMMANDS)}`. –ö–æ–º–∞–Ω–¥—ã, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω—ã –≤ –±–ª–æ–∫ ```manual```.

4.  **–§–æ–∫—É—Å –∏ –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º:** –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —Ä–µ—à–∏—Ç—å **–∏—Å—Ö–æ–¥–Ω—É—é –∑–∞–¥–∞—á—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –∑–∞–Ω–∏–º–∞–π—Å—è –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º–æ–º: –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–π —Å—Ç–∏–ª—å –∫–æ–¥–∞ –∏ –Ω–µ –¥–µ–ª–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∑–∞–¥–∞—á–µ–π.
"""

    if stage == 'execution':
        return f"""
–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å shell-–∫–æ–º–∞–Ω–¥—ã –¥–ª—è –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è.

**–ü–†–ê–í–ò–õ–ê –≠–¢–ê–ü–ê –ò–°–ü–û–õ–ù–ï–ù–ò–Ø:**

1.  **–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ò–∑–º–µ–Ω–µ–Ω–∏–π:**
    *   **–¢–æ—á–µ—á–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ (`sed`):** –ò—Å–ø–æ–ª—å–∑—É–π `sed` **—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö, –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö** –∑–∞–º–µ–Ω. –ö–æ–º–∞–Ω–¥—ã `sed` –ø–æ–º–µ—â–∞–π –≤ –±–ª–æ–∫ ```bash ... ```.
    *   **–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞:** –î–ª—è –ª—é–±—ã—Ö –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –∏–ª–∏ —Å–ª–æ–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π **–ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `cat`. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–ª–æ–∫ ```write_file path/to/your/file.py ... ```. –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ –∏–¥—Ç–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—É—Ç–∏.

2.  **–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –§–∞–π–ª–æ–≤ (–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫!):**
    *   **–í–ù–ò–ú–ê–ù–ò–ï:** –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ `write_file` —Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ü–†–ï–î–ï–õ–¨–ù–û –ê–ö–ö–£–†–ê–¢–ï–ù. –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–π –≤ –±–ª–æ–∫ **–ø–æ–ª–Ω–æ–µ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ** —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞.
    *   **–°—Ç—Ä–∞—Ç–µ–≥–∏—è "–û–¥–∏–Ω –∑–∞ —Ä–∞–∑":** –ï—Å–ª–∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ **–Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö** –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤, –∏–∑–º–µ–Ω—è–π **—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ñ–∞–π–ª –∑–∞ –æ–¥–Ω—É –∏—Ç–µ—Ä–∞—Ü–∏—é**.

3.  **–§–æ—Ä–º–∞—Ç –û—Ç–≤–µ—Ç–∞:**
    *   **–î–µ–π—Å—Ç–≤–∏—è:** –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∫–∏, —Ç–≤–æ–π –æ—Ç–≤–µ—Ç **–û–ë–Ø–ó–ê–ù** —Å–æ–¥–µ—Ä–∂–∞—Ç—å –û–î–ò–ù –∏–∑ –±–ª–æ–∫–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π (`bash` –∏–ª–∏ `write_file`) –∏ –°–†–ê–ó–£ –ü–û–°–õ–ï –Ω–µ–≥–æ –±–ª–æ–∫ `summary`:
        1.  **–î–ª—è —Ç–æ—á–µ—á–Ω—ã—Ö –ø—Ä–∞–≤–æ–∫:** –ë–ª–æ–∫ ```bash ... ``` —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ `sed`.
        2.  **–î–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏:** –ë–ª–æ–∫ ```write_file path/to/file.py ... ``` —Å –ø–æ–ª–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —Ñ–∞–π–ª–∞.
        3.  –ò —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π ‚Äî –±–ª–æ–∫ —Å –∫—Ä–∞—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: ```summary ... ```.
    *   **–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ:** –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞, –Ω–∞–ø–∏—à–∏ **—Ç–æ–ª—å–∫–æ** `–ì–û–¢–û–í–û`. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –¥–æ–±–∞–≤—å –±–ª–æ–∫ ```done_summary ... ```. –ï—Å–ª–∏ –Ω—É–∂–Ω—ã —Ä—É—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, `npm start`), –¥–æ–±–∞–≤—å –∏—Ö –≤ –±–ª–æ–∫ ```manual```.
{base_rules}
"""

    if stage == 'planning':
        return f"""
–¢—ã ‚Äî AI-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –¢–≤–æ—è –ø–µ—Ä–≤–∞—è –∏ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–Ω—è—Ç–µ–Ω.

**–ü–†–ê–í–ò–õ–ê –≠–¢–ê–ü–ê –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø:**

1.  **–ê–Ω–∞–ª–∏–∑ –ó–∞–¥–∞—á–∏:** –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π **—Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π** –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã).
2.  **–î–≤–∞ –ü—É—Ç–∏ –†–∞–∑–≤–∏—Ç–∏—è:**
    *   **–ü—É—Ç—å –ê: –ó–∞–¥–∞—á–∞ –ù–ï–ü–û–ù–Ø–¢–ù–ê.** –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∞ –Ω–µ—á–µ—Ç–∫–æ, –Ω–µ–ø–æ–ª–Ω–æ –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–ª—å–∑—è –Ω–∞–π—Ç–∏ –≤ –∫–æ–¥–µ ‚Äî **–∑–∞–¥–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é**. –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å **—Ç–æ–ª—å–∫–æ** –±–ª–æ–∫ ```clarification ... ``` —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –ø–ª–∞–Ω –∏ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–π —Ñ–∞–π–ª—ã.
    *   **–ü—É—Ç—å –ë: –ó–∞–¥–∞—á–∞ –ü–û–ù–Ø–¢–ù–ê.** –ï—Å–ª–∏ —Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é. –¢–≤–æ–π –æ—Ç–≤–µ—Ç **–û–ë–Ø–ó–ê–ù** —Å–æ–¥–µ—Ä–∂–∞—Ç—å –î–í–ê –±–ª–æ–∫–∞:
        1.  **–ü–ª–∞–Ω –î–µ–π—Å—Ç–≤–∏–π:** ```plan ... ```. –û–ø–∏—à–∏ –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. –ü–ª–∞–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–º.
        2.  **–°–ø–∏—Å–æ–∫ –§–∞–π–ª–æ–≤:** ```files ... ```. –ü–µ—Ä–µ—á–∏—Å–ª–∏ **–≤—Å–µ** —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ —Ç–≤–æ–µ–º—É –º–Ω–µ–Ω–∏—é, –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –ø–ª–∞–Ω–∞. –£–∫–∞–∑—ã–≤–∞–π –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞, –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ. –ù–µ —ç–∫–æ–Ω–æ–º—å! –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –∫–∞—á–µ—Å—Ç–≤–æ - –∑–∞–ø—Ä–æ—Å–∏ –≤—Å–µ —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–ª–∏ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è!!! –≠—Ç–æ –≤–∞–∂–Ω–æ - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ö–ê–ß–ï–°–¢–í–û!
3.  **–ó–∞–ø—Ä–µ—Ç—ã:** –ù–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ **–ó–ê–ü–†–ï–©–ï–ù–û** –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ```bash``` –∏–ª–∏ ```summary```. –¢–≤–æ—è —Ü–µ–ª—å ‚Äî –ª–∏–±–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ª–∏–±–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ñ–∞–π–ª—ã.
{base_rules}
"""

def get_clarification_and_planning_prompt(context, task):
    """
    –ù–û–í–´–ô –ü–†–û–ú–ü–¢: –î–ª—è —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ.
    """
    rules = get_command_rules(stage='planning')
    return f"""{rules}

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–°–û–ö–†–ê–©–ï–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

--- –ó–ê–î–ê–ß–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
{task}
--- –ö–û–ù–ï–¶ –ó–ê–î–ê–ß–ò ---

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç. –°–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º —ç—Ç–∞–ø–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: –ª–∏–±–æ –∑–∞–ø—Ä–æ—Å–∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è (`clarification`), –ª–∏–±–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω (`plan`) –∏ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (`files`).
"""

def get_initial_prompt(context, task, fix_history=None):
    """
    –≠—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞—á–∞–ª–∞ **—ç—Ç–∞–ø–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è**.
    """
    history_prompt_section = ""
    if fix_history:
        history_prompt_section = f"""
--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ï–ì–û –†–ï–®–ï–ù–ò–Ø, –ö–û–¢–û–†–û–ï –û–ö–ê–ó–ê–õ–û–°–¨ –ù–ï–í–ï–†–ù–´–ú ---
{fix_history}
--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ—é –ø—Ä–æ—à–ª—É—é –æ—à–∏–±–∫—É –∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ.
"""
    return f"{get_command_rules(stage='execution')}\n{history_prompt_section}\n--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–ü–û–õ–ù–´–ô –ò–õ–ò –ß–ê–°–¢–ò–ß–ù–´–ô) ---\n{context}\n--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---\n–ó–∞–¥–∞—á–∞: {task}\n–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –æ—Ç–≤–µ—Ç, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –ø—Ä–∞–≤–∏–ª–∞–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è."

def get_review_prompt(context, goal, iteration_count, attempt_history):
    iteration_info = ""
    if iteration_count >= 4:
        iteration_info = f"\n**–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï (–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}):** –¢—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–±–ª–µ–º—É –±–æ–ª–µ–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ.\n"
    history_info = ""
    if attempt_history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            "\n---\n".join(attempt_history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{get_command_rules(stage='execution')}
{iteration_info}
{history_info}
**–í–ê–ñ–ù–û:** –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω. –ö–æ–¥ –Ω–∏–∂–µ ‚Äî —ç—Ç–æ **–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ** –ø—Ä–æ–µ–∫—Ç–∞.

**–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø:**
1.  –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π **—Ç–µ–∫—É—â–∏–π** –∫–æ–¥, —É—á–∏—Ç—ã–≤–∞—è **–≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π**.
2.  –ï—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞, –Ω–∞–ø–∏—à–∏ `–ì–û–¢–û–í–û`.
3.  –ï—Å–ª–∏ —Ü–µ–ª—å –ù–ï –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ `summary`.

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–û–ë–ù–û–í–õ–ï–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

–ù–∞–ø–æ–º–∏–Ω–∞—é –ò–°–•–û–î–ù–£–Æ –¶–ï–õ–¨: {goal}
"""

def get_error_fixing_prompt(failed_command, error_message, goal, context, iteration_count, attempt_history):
    iteration_info = ""
    if iteration_count >= 4:
        iteration_info = f"\n**–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï (–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}):** –¢—ã —Å–¥–µ–ª–∞–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤, –∏ —Å–µ–π—á–∞—Å –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–±–ª–µ–º—É –±–æ–ª–µ–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ.\n"
    history_info = ""
    if attempt_history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            "\n---\n".join(attempt_history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{get_command_rules(stage='execution')}
{iteration_info}
{history_info}
**–í–ê–ñ–ù–û:** –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞. –ù–µ –ø–∏—à–∏ '–ì–û–¢–û–í–û'.

--- –î–ê–ù–ù–´–ï –û –¢–ï–ö–£–©–ï–ô –û–®–ò–ë–ö–ï ---
–ö–û–ú–ê–ù–î–ê: {failed_command}
–°–û–û–ë–©–ï–ù–ò–ï (stderr): {error_message}
--- –ö–û–ù–ï–¶ –î–ê–ù–ù–´–• –û–ë –û–®–ò–ë–ö–ï ---

–ò—Å—Ö–æ–¥–Ω–∞—è –¶–ï–õ–¨ –±—ã–ª–∞: {goal}

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π **—Ç–µ–∫—É—â—É—é –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏** –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å **–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–º–∞–Ω–¥** –∏ `summary`.

--- –ö–û–ù–¢–ï–ö–°–¢, –ì–î–ï –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---
"""