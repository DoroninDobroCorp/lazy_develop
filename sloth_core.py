# –§–∞–π–ª: sloth_core.py
"""
–Ø–¥—Ä–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Gemini (Google AI / Vertex AI) –¥–ª—è Sloth.

–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ç–≤–æ–µ–π –≤–µ—Ä—Å–∏–µ–π:
- –ë–û–õ–¨–®–ï –ù–ï –ó–ê–î–ê–Å–¢–°–Ø max_output_tokens ‚Üí –æ—Ç–¥–∞—ë–º –º–æ–¥–µ–ª–∏ –ø—Ä–∞–≤–æ –ø–∏—Å–∞—Ç—å –º–∞–∫—Å–∏–º—É–º.
- –î–æ–±–∞–≤–ª–µ–Ω thinking budget (–±—é–¥–∂–µ—Ç –Ω–∞ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è), –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω:
  * –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤–æ–≥–æ SDK google-genai: —á–µ—Ä–µ–∑ GenerateContentConfig(thinking_config=ThinkingConfig(...))
  * –í Vertex AI: —á–µ—Ä–µ–∑ GenerationConfig(thinking_config=ThinkingConfig(...))
  * –í —Å—Ç–∞—Ä–æ–º google.generativeai thinking –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –ø–µ—á–∞—Ç–∞—é –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥.
- –û—Ç–≤–µ—Ç —Å–æ–±–∏—Ä–∞—é –Ω–∞–¥—ë–∂–Ω–æ (response.text, –ª–∏–±–æ parts), usage —Å—á–∏—Ç—ã–≤–∞—é –±–µ—Ä–µ–∂–Ω–æ —Å –∑–∞–ø–∞—Å–Ω—ã–º–∏ –≤–µ—Ç–∫–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
- –ó–Ω–∞—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ça —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∑—è–ª 24576 —Ç–æ–∫–µ–Ω–æ–≤, —Ç.–∫. —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–µ–¥–µ–ª,
  —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å 2.5-—Å–µ—Ä–∏–µ–π –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å env SLOTH_THINKING_BUDGET.
"""

import os
from typing import Any, Dict
from colors import Colors
import config as sloth_config

# --- –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π Google GenAI SDK (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ) ---
HAS_GOOGLE_GENAI = False
try:
    from google import genai as genai_new
    from google.genai.types import GenerateContentConfig, ThinkingConfig
    HAS_GOOGLE_GENAI = True
except Exception:
    genai_new = None
    GenerateContentConfig = None
    ThinkingConfig = None
    HAS_GOOGLE_GENAI = False

# --- –°—Ç–∞—Ä—ã–π SDK (fallback, –±–µ–∑ thinking budget) ---
HAS_LEGACY_GENAI = False
try:
    import google.generativeai as genai_legacy
    HAS_LEGACY_GENAI = True
except Exception:
    genai_legacy = None
    HAS_LEGACY_GENAI = False

# --- Vertex AI SDK ---
import vertexai
from vertexai.generative_models import GenerativeModel, HarmCategory, HarmBlockThreshold
# –≠—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö –ø–∞–∫–µ—Ç–∞; –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º—è–≥–∫–æ
try:
    from vertexai.generative_models import GenerationConfig as VertexGenerationConfig  # —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
except Exception:
    VertexGenerationConfig = None
try:
    from vertexai.generative_models import ThinkingConfig as VertexThinkingConfig     # thinking –∫–æ–Ω—Ñ–∏–≥
except Exception:
    VertexThinkingConfig = None

# --- –ù–ê–°–¢–†–û–ô–ö–ò –Ø–î–†–ê ---
def _pick_cfg(path: str, env_name: str, default: Any) -> Any:
    v = sloth_config.get(path, None)
    if v is not None and v != "":
        return v
    ev = os.getenv(env_name)
    if ev is not None and ev != "":
        return ev
    return default

# –í–ê–ñ–ù–û: –∫–ª—é—á –∏ –ø—Ä–æ–µ–∫—Ç –¢–û–õ–¨–ö–û –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–±–µ–∑ ENV/–¥–µ—Ñ–æ–ª—Ç–æ–≤)
GOOGLE_API_KEY = sloth_config.get("google.api_key", None)
GOOGLE_CLOUD_PROJECT = sloth_config.get("google.cloud_project", None)
GOOGLE_CLOUD_LOCATION = _pick_cfg("google.cloud_location", "GOOGLE_CLOUD_LOCATION", "us-central1")
MODEL_NAME = _pick_cfg("model.name", "SLOTH_MODEL_NAME", "gemini-2.5-pro")
CONTEXT_PREP_MODEL_NAME = _pick_cfg("model.context_prep_name", "SLOTH_CONTEXT_PREP_MODEL", "gemini-2.5-flash")
API_TIMEOUT_SECONDS = int(_pick_cfg("api.timeout_seconds", "SLOTH_API_TIMEOUT", "600"))

# –í–ê–ñ–ù–û: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.
THINKING_BUDGET_TOKENS = int(_pick_cfg("thinking.budget_tokens", "SLOTH_THINKING_BUDGET", "24576"))

# –ö–æ–º–∞–Ω–¥—ã-–∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è bash
ALLOWED_COMMANDS = (
    "rm", "mv", "touch", "mkdir", "npm", "npx", "yarn", "pnpm", "git", "echo", "./",
    # –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    "prisma", "bunx", "bun"
)

def _normalize_pricing(pricing: Dict[str, Any]) -> Dict[str, Any]:
    def to_num(x: Any) -> Any:
        if isinstance(x, str) and x.lower() == "inf":
            return float('inf')
        return x
    out: Dict[str, Any] = {}
    for model, mp in (pricing or {}).items():
        m_out: Dict[str, Any] = {}
        for io_key in ("input", "output"):
            tiers = ((mp or {}).get(io_key, {}) or {}).get("tiers", [])
            norm_tiers = []
            for tier in tiers:
                if not isinstance(tier, dict):
                    continue
                up_to = to_num(tier.get("up_to"))
                price = float(tier.get("price")) if tier.get("price") is not None else None
                norm_tiers.append({"up_to": up_to, "price": price})
            m_out[io_key] = {"tiers": norm_tiers}
        out[model] = m_out
    return out

_DEFAULT_MODEL_PRICING = {
    "gemini-2.5-pro": {
        "input": {"tiers": [{"up_to": 200000, "price": 1.25}, {"up_to": float('inf'), "price": 2.50}]},
        "output": {"tiers": [{"up_to": 200000, "price": 10.00}, {"up_to": float('inf'), "price": 15.00}]}
    },
    "gemini-2.5-flash": {
        # Public references (May 2025): ~$0.15 / 1M input, ~$0.60 / 1M output (reasoning off)
        "input": {"tiers": [{"up_to": float('inf'), "price": 0.15}]},
        "output": {"tiers": [{"up_to": float('inf'), "price": 0.60}]}
    },
    "gemini-2.5-flash-lite": {
        # Public references (May 2025): ~$0.10 / 1M input, ~$0.40 / 1M output
        "input": {"tiers": [{"up_to": float('inf'), "price": 0.10}]},
        "output": {"tiers": [{"up_to": float('inf'), "price": 0.40}]}
    },
    "gemini-1.5-pro-latest": {
        "input": {"tiers": [{"up_to": float('inf'), "price": 3.50}]},
        "output": {"tiers": [{"up_to": float('inf'), "price": 10.50}]}
    }
}

MODEL_PRICING = _normalize_pricing(sloth_config.get("model_pricing", _DEFAULT_MODEL_PRICING) or _DEFAULT_MODEL_PRICING)

# --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è API ---
model = None  # –≤ —Ä–µ–∂–∏–º–µ google-genai –∑–¥–µ—Å—å –±—É–¥–µ—Ç client, –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äî –æ–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏
ACTIVE_API_SERVICE = "N/A"
GOOGLE_AI_HAS_FAILED_THIS_SESSION = False
_last_request_log_key = None  # –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏

# –ë–∞–∑–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ‚Äî –ë–ï–ó max_output_tokens!
GENERATION_TEMPERATURE = float(_pick_cfg("generation.temperature", "SLOTH_TEMPERATURE", "1"))
GENERATION_TOP_P = float(_pick_cfg("generation.top_p", "SLOTH_TOP_P", "1"))
GENERATION_TOP_K = int(float(_pick_cfg("generation.top_k", "SLOTH_TOP_K", "1")))

def _log_generation_params():
    print(
        f"{Colors.CYAN}üîß –õ–û–ì: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:"
        f" temperature={GENERATION_TEMPERATURE}, top_p={GENERATION_TOP_P}, top_k={GENERATION_TOP_K}."
        f" max_output_tokens –ù–ï –∑–∞–¥–∞–Ω –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ.{Colors.ENDC}"
    )
    print(
        f"{Colors.CYAN}üß© –õ–û–ì: –ë—é–¥–∂–µ—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π (thinking_budget) = {THINKING_BUDGET_TOKENS} —Ç–æ–∫–µ–Ω–æ–≤, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è SDK/–º–æ–¥–µ–ª—å.{Colors.ENDC}"
    )

def initialize_model():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–µ—Ä–≤–∏—Å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º:
    1) Google GenAI SDK (api key) ‚Üí thinking_config –¥–æ—Å—Ç—É–ø–µ–Ω
    2) –°—Ç–∞—Ä—ã–π google.generativeai (api key) ‚Üí thinking_config –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    3) Vertex AI SDK (ADC/Service Account) ‚Üí thinking_config –¥–æ—Å—Ç—É–ø–µ–Ω
    """
    global model, ACTIVE_API_SERVICE, GOOGLE_AI_HAS_FAILED_THIS_SESSION

    print(f"{Colors.CYAN}‚öôÔ∏è  –õ–û–ì: –ù–∞—á–∏–Ω–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é. –ú–æ–¥–µ–ª—å: {MODEL_NAME}{Colors.ENDC}")
    _log_generation_params()

    # --- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –Ω–æ–≤—ã–π Google GenAI SDK (api key) ---
    if GOOGLE_API_KEY and HAS_GOOGLE_GENAI and not GOOGLE_AI_HAS_FAILED_THIS_SESSION:
        print(f"{Colors.CYAN}üîë –õ–û–ì: –ü—Ä–æ–±—É—é Google GenAI SDK (–ø–æ API-–∫–ª—é—á—É).{Colors.ENDC}")
        try:
            model = genai_new.Client(api_key=GOOGLE_API_KEY)
            # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ã–∑–æ–≤ (–Ω–µ –∑–∞–¥–∞—ë–º max_output_tokens)
            _ = model.models.generate_content(
                model=MODEL_NAME,
                contents="ping"
            )
            ACTIVE_API_SERVICE = "Google GenAI SDK"
            print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –£—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ {ACTIVE_API_SERVICE}.{Colors.ENDC}")
            return
        except Exception as e:
            print(f"{Colors.WARNING}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –°–±–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GenAI SDK: {e}{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            model = None

    # --- Fallback: —Å—Ç–∞—Ä—ã–π google.generativeai (api key) ---
    if GOOGLE_API_KEY and HAS_LEGACY_GENAI and not model:
        print(f"{Colors.CYAN}üîë –õ–û–ì: –ü—Ä–æ–±—É—é —Å—Ç–∞—Ä—ã–π google.generativeai (API Key).{Colors.ENDC}")
        try:
            genai_legacy.configure(api_key=GOOGLE_API_KEY)
            # –í–ê–ñ–ù–û: generation_config –±–µ–∑ max_output_tokens
            generation_config = {
                "temperature": GENERATION_TEMPERATURE,
                "top_p": GENERATION_TOP_P,
                "top_k": GENERATION_TOP_K,
            }
            model = genai_legacy.GenerativeModel(
                model_name=MODEL_NAME,
                generation_config=generation_config,
                safety_settings={
                    'HARM_CATEGORY_HARASSMENT': 'block_medium_and_above',
                    'HARM_CATEGORY_HATE_SPEECH': 'block_medium_and_above',
                    'HARM_CATEGORY_SEXUALLY_EXPLICIT': 'block_medium_and_above',
                    'HARM_CATEGORY_DANGEROUS_CONTENT': 'block_none',
                }
            )
            # –ü—Ä–æ–±–Ω—ã–π –≤—ã–∑–æ–≤
            model.generate_content("test", request_options={"timeout": 60})
            ACTIVE_API_SERVICE = "Google AI (Legacy SDK)"
            print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ {ACTIVE_API_SERVICE} —É—Å–ø–µ—à–Ω–∞.{Colors.ENDC}")
            print(f"{Colors.WARNING}‚ÑπÔ∏è  –õ–û–ì: –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ thinking_budget –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 'google-genai'.{Colors.ENDC}")
            return
        except Exception as e:
            print(f"{Colors.WARNING}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–π SDK: {e}{Colors.ENDC}")
            model = None

    # --- –†–µ–∑–µ—Ä–≤: Vertex AI (ADC/Service Account) ---
    print(f"{Colors.CYAN}üî© –õ–û–ì: –ü—ã—Ç–∞—é—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Vertex AI SDK...{Colors.ENDC}")
    try:
        vertexai.init(project=GOOGLE_CLOUD_PROJECT, location=GOOGLE_CLOUD_LOCATION)

        # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –±–µ–∑ max_output_tokens
        vertex_gen_conf = {
            "temperature": GENERATION_TEMPERATURE,
            "top_p": GENERATION_TOP_P,
            "top_k": GENERATION_TOP_K,
        }

        # –î–æ–±–∞–≤–∏–º thinking_config, –µ—Å–ª–∏ –∫–ª–∞—Å—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ SDK
        if VertexThinkingConfig is not None:
            try:
                vertex_gen_conf = VertexGenerationConfig(
                    temperature=GENERATION_TEMPERATURE,
                    top_p=GENERATION_TOP_P,
                    top_k=GENERATION_TOP_K,
                    thinking_config=VertexThinkingConfig(thinking_budget=THINKING_BUDGET_TOKENS),
                )
            except Exception:
                # –ï—Å–ª–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ–¥–∞–¥–∏–º —Å–ª–æ–≤–∞—Ä—å (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç dict)
                vertex_gen_conf = {
                    "temperature": GENERATION_TEMPERATURE,
                    "top_p": GENERATION_TOP_P,
                    "top_k": GENERATION_TOP_K,
                    "thinking_config": {"thinking_budget": THINKING_BUDGET_TOKENS},
                }

        model = GenerativeModel(
            model_name=MODEL_NAME,
            generation_config=vertex_gen_conf,
            safety_settings={
                HarmCategory.HARM_CATEGORY_HARASSMENT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_HATE_SPEECH: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: HarmBlockThreshold.BLOCK_NONE,
            }
        )
        ACTIVE_API_SERVICE = "Vertex AI"
        # –ü—Ä–æ–±–Ω—ã–π –≤—ã–∑–æ–≤
        _ = model.generate_content("ping")
        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: Vertex AI SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.{Colors.ENDC}")
    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å: {e}{Colors.ENDC}")
        model = None
        ACTIVE_API_SERVICE = "N/A"

def get_active_service_details():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å/–∫–ª–∏–µ–Ω—Ç –∏ –∏–º—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞."""
    return model, ACTIVE_API_SERVICE

def _extract_text_and_usage_from_genai_response(resp):
    # –ü—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å —Ç–µ–∫—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–¥—ë–∂–Ω–æ
    full_text = getattr(resp, "text", None)
    if not full_text:
        try:
            # google-genai –∏–Ω–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç candidates
            cands = getattr(resp, "candidates", None) or []
            parts_text = []
            for c in cands:
                try:
                    ct = getattr(c, "content", None)
                    if ct and getattr(ct, "parts", None):
                        for p in ct.parts:
                            t = getattr(p, "text", None)
                            if t:
                                parts_text.append(t)
                except Exception:
                    pass
            full_text = "".join(parts_text) if parts_text else ""
        except Exception:
            full_text = ""

    # usage
    prompt_tokens = 0
    output_tokens = 0
    try:
        um = getattr(resp, "usage_metadata", None)
        if um:
            prompt_tokens = getattr(um, "prompt_token_count", getattr(um, "input_tokens", 0)) or 0
            output_tokens = getattr(um, "candidates_token_count", getattr(um, "output_tokens", 0)) or 0
    except Exception:
        pass
    return full_text, prompt_tokens, output_tokens

def send_request_to_model(model_instance, active_service, prompt_text, iteration_count=0, model_name_override=None):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–∫–µ–Ω–∞—Ö."""
    global GOOGLE_AI_HAS_FAILED_THIS_SESSION, _last_request_log_key

    try:
        log_header = f"[–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}]" if iteration_count > 0 else "[–≠—Ç–∞–ø –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è]"
        # –ê–Ω—Ç–∏-–¥—É–±–ª—å: –ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª—é—á –ª–æ–≥–æ–≤ –ø–æ–º–µ–Ω—è–ª—Å—è
        log_key = (iteration_count, active_service)
        if _last_request_log_key != log_key:
            print(f"{Colors.CYAN}üß† –õ–û–ì: {log_header} –ì–æ—Ç–æ–≤–ª—é –∑–∞–ø—Ä–æ—Å –≤ –º–æ–¥–µ–ª—å ({active_service}).{Colors.ENDC}")
            print(f"{Colors.CYAN}‚è≥ –õ–û–ì: –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å... (—Ç–∞–π–º–∞—É—Ç: {API_TIMEOUT_SECONDS} —Å–µ–∫){Colors.ENDC}")
            _last_request_log_key = log_key

        # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏: –ª–∏–±–æ override, –ª–∏–±–æ –æ—Å–Ω–æ–≤–Ω–æ–π MODEL_NAME
        _model_to_use = model_name_override or MODEL_NAME

        if active_service == "Google GenAI SDK":
            # –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç + thinking_config
            cfg = GenerateContentConfig(
                temperature=GENERATION_TEMPERATURE,
                top_p=GENERATION_TOP_P,
                top_k=GENERATION_TOP_K,
                # –∫—Ä–∏—Ç–∏—á–Ω–æ: –Ω–µ –∑–∞–¥–∞—ë–º max_output_tokens
                thinking_config=ThinkingConfig(thinking_budget=THINKING_BUDGET_TOKENS),
            )
            print(f"  model={_model_to_use}")
            print(f"  top_k={GENERATION_TOP_K}")
            print(f"  thinking_budget={THINKING_BUDGET_TOKENS}")
            response = model_instance.models.generate_content(
                model=_model_to_use,
                contents=prompt_text,
                config=cfg,
            )
            text, in_tok, out_tok = _extract_text_and_usage_from_genai_response(response)

        elif active_service == "Google AI (Legacy SDK)":
            # –°—Ç–∞—Ä—ã–π generativeai; thinking —Ç—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, max_output_tokens –Ω–µ –∑–∞–¥–∞–µ–º
            request_options = {"timeout": API_TIMEOUT_SECONDS}
            response = model_instance.generate_content(prompt_text, request_options={"timeout": API_TIMEOUT_SECONDS})
            # –°–∫–ª–µ–π–∫–∞ –æ—Ç–≤–µ—Ç–∞
            text = getattr(response, "text", None)
            if not text:
                try:
                    text = "".join(part.text for part in response.parts)
                except Exception:
                    text = str(response)
            # usage
            in_tok = 0
            out_tok = 0
            try:
                um = response.usage_metadata
                in_tok = getattr(um, "prompt_token_count", 0) or 0
                out_tok = getattr(um, "candidates_token_count", 0) or 0
            except Exception:
                pass

        elif active_service == "Vertex AI":
            response = model_instance.generate_content(prompt_text)
            text = getattr(response, "text", None)
            if not text:
                try:
                    text = "".join(part.text for part in response.parts)
                except Exception:
                    text = str(response)
            in_tok = 0
            out_tok = 0
            try:
                um = response.usage_metadata
                in_tok = getattr(um, "prompt_token_count", 0) or 0
                out_tok = getattr(um, "candidates_token_count", 0) or 0
            except Exception:
                pass

        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å API: {active_service}")

        if not text:
            raise ValueError("–û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø—É—Å—Ç–æ–π.")

        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ.{Colors.ENDC}")
        return {"text": text, "input_tokens": in_tok, "output_tokens": out_tok}

    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API ({active_service}): {e}{Colors.ENDC}")
        # –ê–≤—Ç–æ–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ: –ø—Ä–∏ —Å–±–æ–µ GenAI SDK –ø—Ä–æ–±—É–µ–º Vertex
        if active_service == "Google GenAI SDK":
            print(f"{Colors.CYAN}üîÑ –õ–û–ì: –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ Vertex AI –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤...{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            initialize_model()
        return None

def get_clarification_and_planning_prompt(context, task, boundary=None):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è —ç—Ç–∞–ø–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    boundary_instr = ""
    if boundary:
        boundary_instr = f"""
**–§–æ—Ä–º–∞—Ç write_file —Å BOUNDARY (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω):**
```write_file path="path/to/file" boundary="{boundary}"
<–ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ–∞–π–ª–∞, –≤ —Ç.—á. —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ ```
 –∏ ```bash –±–ª–æ–∫–∞–º–∏>
{boundary}

–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –ü–ï–†–ï–î –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º ``` ‚Äî —Ä–æ–≤–Ω–æ {boundary}.
"""

    global_rules = fr"""
**–ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´ –ö –ò–°–ü–û–õ–ù–ï–ù–ò–Æ):**

1.  **–ü–†–ê–í–ò–õ–û –û–ë–©–ï–ù–ò–Ø: –¢–ï–ö–°–¢ –í–ù–ï –ë–õ–û–ö–û–í –ù–ï–í–ò–î–ò–ú!**
    *   –ú–æ–π –ø–∞—Ä—Å–µ—Ä –≤–∏–¥–∏—Ç **—Ç–æ–ª—å–∫–æ** —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–∫–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å ````.
    *   –õ—é–±–æ–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–∏—à–µ—à—å –≤–Ω–µ —ç—Ç–∏—Ö –±–ª–æ–∫–æ–≤ (–æ–±—ä—è—Å–Ω–µ–Ω–∏—è, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏), **–±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —É—Ç–µ—Ä—è–Ω**. –ï–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç.
    *   –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ —Å–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–ª–∏ –º–Ω–µ, –∏—Å–ø–æ–ª—å–∑—É–π **—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏**:
        *   –î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏–π: ````clarification ... ````
        *   –î–ª—è —Ä—É—á–Ω—ã—Ö —à–∞–≥–æ–≤: ````manual ... ````
        *   –î–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: ````summary ... ```` –∏–ª–∏ ````done_summary ... ````

2.  **–ü–†–ê–í–ò–õ–û –ü–£–¢–ï–ô (–°–ê–ú–û–ï –í–ê–ñ–ù–û–ï!):**
    *   –í—Å–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å (–≤ –±–ª–æ–∫–∞—Ö `files`, `write_file`, `bash`), –î–û–õ–ñ–ù–´ –±—ã—Ç—å **–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**.
    *   **–ö–ê–¢–ï–ì–û–†–ò–ß–ï–°–ö–ò –ó–ê–ü–†–ï–©–ï–ù–û** –Ω–∞—á–∏–Ω–∞—Ç—å –ø—É—Ç—å —Å –∏–º–µ–Ω–∏ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.
    *   **–ü—Ä–∏–º–µ—Ä:** –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ `/path/to/my-project`, –∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Ñ–∞–π–ª `src/app.js`:
        *   **–ü–†–ê–í–ò–õ–¨–ù–û:** `src/app.js`
        *   **–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:** `my-project/src/app.js`
    *   –ó–∞–ø—Ä–µ—â–µ–Ω–æ: –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ (`/...`), `~`, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ `..`, –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª—ç—à–∏ \, –ø—Ä–æ–±–µ–ª—ã –≤ –ø—É—Ç–∏, –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
    *   –ü—É—Ç—å –Ω–µ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∏–º–µ–Ω–∏ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.
    *   –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –ø—É—Ç–∏: –ª–∞—Ç–∏–Ω–∏—Ü–∞/—Ü–∏—Ñ—Ä—ã/`_`/`-`/`.` –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å `/`.

3.  **–†–∞–±–æ—á–∞—è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:** –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞. –†–∞–∑—Ä–µ—à—ë–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω `cd <–ø–æ–¥–ø–∞–ø–∫–∞> && <—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞>`. **–ó–∞–ø—Ä–µ—â—ë–Ω** –æ–¥–∏–Ω–æ—á–Ω—ã–π `cd` –∏–ª–∏ —Ü–µ–ø–æ—á–∫–∏ `cd` –±–µ–∑ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.

4.  **–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã:** `{', '.join(ALLOWED_COMMANDS)}`. –¢–∞–∫–∂–µ —Ä–∞–∑—Ä–µ—à—ë–Ω –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º `cd <–ø–æ–¥–ø–∞–ø–∫–∞> &&` –ø–µ—Ä–µ–¥ —ç—Ç–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏. –ö–æ–º–∞–Ω–¥—ã, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ —Å–ø–∏—Å–æ–∫, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω—ã –≤ –±–ª–æ–∫ ```manual```.

5.  **–§–æ–∫—É—Å –∏ –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º:** –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —Ä–µ—à–∏—Ç—å **–∏—Å—Ö–æ–¥–Ω—É—é –∑–∞–¥–∞—á—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –∑–∞–Ω–∏–º–∞–π—Å—è –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º–æ–º: –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–π —Å—Ç–∏–ª—å –∫–æ–¥–∞ –∏ –Ω–µ –¥–µ–ª–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∑–∞–¥–∞—á–µ–π.

6.  **–ü–†–ê–í–ò–õ–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø (–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û):**
     *   –¢—ã –º–æ–∂–µ—à—å –∏ –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–ª—è—Ç—å –ª–æ–≥–∏ (`print`, `console.log` –∏ —Ç.–ø.) –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
     *   **–ó–ê–ü–†–ï–©–ï–ù–û** –¥–æ–±–∞–≤–ª—è—Ç—å –õ–Æ–ë–û–ô –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ `[SLOTHLOG]`. –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–∏—à–µ—à—å, **–û–ë–Ø–ó–ê–ù** –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `[SLOTHLOG]`.
     *   **–ü—Ä–∏–º–µ—Ä –ü–†–ê–í–ò–õ–¨–ù–û:** `print(f"[SLOTHLOG] Variable foo: {{foo}}")`
     *   **–ü—Ä–∏–º–µ—Ä –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:** `print(f"Variable foo: {{foo}}")`
     *   –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ, –∏—Å–∫–ª—é—á–µ–Ω–∏–π –Ω–µ—Ç.

7.  **–°–õ–£–ñ–ï–ë–ù–´–ï –ú–ê–†–ö–ï–†–´ –ò –ú–ï–¢–ê‚Äë–¢–ï–ö–°–¢:**
     *   –ú–∞—Ä–∫–µ—Ä –≥—Ä–∞–Ω–∏—Ü—ã `{boundary or 'SLOTH_BOUNDARY_*'}` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¢–û–õ–¨–ö–û –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.
     *   –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—Å—Ç–∞–≤–ª—è–π —Å—Ç—Ä–æ–∫–∏ —Å `SLOTH_BOUNDARY` –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã `bash`.
     *   –õ—é–±–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ `SLOTH_BOUNDARY` –≤ –∏—Ç–æ–≥–æ–≤—ã–π –∫–æ–¥ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.
     *   –ù–µ –≤—Å—Ç–∞–≤–ª—è–π –≤ –∫–æ–¥ –º–µ—Ç–∞‚Äë–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞–ø–æ–¥–æ–±–∏–µ: ‚ÄúI'll remove the stray ...‚Äù/‚Äúremove boundary ...‚Äù. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –∫–æ–Ω–µ—á–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.
"""

    planning_rules = f"""
–¢—ã ‚Äî AI-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø–æ–Ω—è—Ç–Ω–∞.

**–ü–†–ê–í–ò–õ–ê –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø:**

1.  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ **—Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π** –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞.
2.  –î–≤–∞ –ø—É—Ç–∏ –≤—ã–≤–æ–¥–∞:
    *   –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ–ø–æ–Ω—è—Ç–Ω–∞ ‚Äî –≤–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –±–ª–æ–∫ ```clarification ... ```.
    *   –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –ø–æ–Ω—è—Ç–Ω–∞ ‚Äî –≤–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –±–ª–æ–∫ ```plan ... ```.
3.  –í –±–ª–æ–∫–µ `plan` –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø–æ–∏—Ç–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–ª–∞–Ω (–ò—Ç–µ—Ä–∞—Ü–∏—è 1..N):
    *   –î–ª—è –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —É–∫–∞–∂–∏: —Ü–µ–ª—å —à–∞–≥–∞, –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã, –æ—Ü–µ–Ω–∫—É –æ–±—ä—ë–º–∞ (¬´~–¥–æ 500‚Äì600 —Å—Ç—Ä–æ–∫¬ª –∏–ª–∏ ¬´1 –∫—Ä—É–ø–Ω—ã–π —Ñ–∞–π–ª path¬ª), –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –Ω—É–∂–Ω–∞ –ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ (`verify_run`).
    *   –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ –≤—ã–ø–æ–ª–Ω—è–π –∑–∞ –æ–¥–Ω—É –∏—Ç–µ—Ä–∞—Ü–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî –Ω–µ –¥—Ä–æ–±–∏ –æ–¥–∏–Ω —Ñ–∞–π–ª –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Ç–µ—Ä–∞—Ü–∏–π.
    *   –ü–ª–∞–Ω –¥–æ–ª–∂–µ–Ω —è–≤–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è `verify_run` –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å–µ–π —Ä–∞–±–æ—Ç—ã (–µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –µ—Å—Ç—å). –ï—Å–ª–∏ verify-–∫–æ–º–∞–Ω–¥–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –∏—Ç–æ–≥: `done_summary` –±–µ–∑ –∑–∞–ø—É—Å–∫–∞.
4.  –ù–∞ —ç—Ç–∞–ø–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ```bash``` –∏–ª–∏ `write_file`.

5.  –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –í–´–í–û–î–ê: –¥–µ—Ä–∂–∏ –æ—Ç–≤–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä–∞—Ç–∫–∏–º.
    *   –î–ª—è clarification ‚Äî –¥–æ 5 –ø—É–Ω–∫—Ç–æ–≤, —Å—É–º–º–∞—Ä–Ω–æ –¥–æ ~300 —Å–ª–æ–≤.
    *   –î–ª—è plan ‚Äî –Ω–µ –±–æ–ª–µ–µ 12 –ø—É–Ω–∫—Ç–æ–≤, —Å—É–º–º–∞—Ä–Ω–æ –¥–æ ~500 —Å–ª–æ–≤.
    *   –ù–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –≤–Ω–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –±–ª–æ–∫–∞.

–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –ø–ª–∞–Ω–∞ (—à–∞–±–ª–æ–Ω):
```
```plan
–ò—Ç–µ—Ä–∞—Ü–∏—è 1/N
- –¶–µ–ª—å: –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞—Ç—å —Ü–µ–ª—å —à–∞–≥–∞
- –§–∞–π–ª—ã: path/a, path/b
- –û–±—ä—ë–º: ~–¥–æ 500‚Äì600 —Å—Ç—Ä–æ–∫ –ò–õ–ò 1 –∫—Ä—É–ø–Ω—ã–π —Ñ–∞–π–ª path
- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏
- –ü—Ä–æ–≤–µ—Ä–∫–∞: verify_run (–µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞)
- DoD: –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —à–∞–≥–∞

–ò—Ç–µ—Ä–∞—Ü–∏—è 2/N
- –¶–µ–ª—å: ...
...

–ò—Ç–µ—Ä–∞—Ü–∏—è N/N
- –¶–µ–ª—å: —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è
- –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–∏–Ω–∞–ª—å–Ω—ã–π verify_run; –ø—Ä–∏ —É—Å–ø–µ—Ö–µ done_summary + –ì–û–¢–û–í–û
```
```
"""

    return f"""{planning_rules}
{global_rules}
{boundary_instr}

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–°–û–ö–†–ê–©–ï–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

--- –ó–ê–î–ê–ß–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
{task}
--- –ö–û–ù–ï–¶ –ó–ê–î–ê–ß–ò ---

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç. –°–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º —ç—Ç–∞–ø–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

def _get_execution_prompt_rules(boundary=None):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–∏–π –Ω–∞–±–æ—Ä –ø—Ä–∞–≤–∏–ª –¥–ª—è –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è."""
    b = f"\n\n{boundary}" if boundary else ""
    return f"""
–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –∫–∞–∫ —Å—Ç—Ä–æ–≥–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞. –§–æ—Ä–º–∞—Ç–∏—Ä—É–π –æ—Ç–≤–µ—Ç –¢–û–õ–¨–ö–û –±–ª–æ–∫–∞–º–∏ –Ω–∏–∂–µ. –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ.

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê –ò –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø:
*   –†–∞–∑—Ä–µ—à–µ–Ω—ã –¢–û–õ–¨–ö–û —Ç–∞–∫–∏–µ –±–ª–æ–∫–∏:
    - ```write_file path=\"RELATIVE/PATH\"{b}\n...—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞...\n```
    - ```bash\n...–∫–æ–º–∞–Ω–¥—ã...\n```
    - ```verify_run```
    - ```summary```
    - ```done_summary```
    - ```manual```
*   –õ—é–±–æ–π —Ç–µ–∫—Å—Ç –≤–Ω–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤ –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω.
*   –ù–ï–õ–¨–ó–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã/–∫–æ–º–∞–Ω–¥—ã –≤–Ω–µ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞.
*   –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî –≤–µ—Ä–Ω–∏ –±–ª–æ–∫ `manual` —Å —á—ë—Ç–∫–∏–º–∏ —à–∞–≥–∞–º–∏ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞.

–ê–ù–¢–ò-–ü–ï–†–§–ï–ö–¶–ò–û–ù–ò–ó–ú –ò –ò–ó–ë–ï–ñ–ê–ù–ò–ï –ó–ê–¶–ò–ö–õ–ò–í–ê–ù–ò–Ø:
*   –ï—Å–ª–∏ —Ç—ã —É–∂–µ –ø—Ä–∞–≤–∏–ª —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π(–∏—Ö) –∏—Ç–µ—Ä–∞—Ü–∏–∏(—è—Ö) –∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫/–ª–æ–≥–æ–≤ ‚Äî –ù–ï –¥–µ–ª–∞–π –º–∏–∫—Ä–æ‚Äë–ø—Ä–∞–≤–æ–∫. –õ–∏–±–æ –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä—É–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø–∞—Ç—á —Å—Ä–∞–∑—É, –ª–∏–±–æ –≤–æ–∑–≤—Ä–∞—â–∞–π `done_summary` –∏ `–ì–û–¢–û–í–û`.
*   –ï—Å–ª–∏ —Ä–µ—à–∞–µ—à—å—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–π–ª, —Å–¥–µ–ª–∞–π —ç—Ç–æ –í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –∏ –í–°–ï–°–¢–û–†–û–ù–ù–ï –≤ –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥: —É—á—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã, –≤—ã–∑–æ–≤—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏, —Ç–µ—Å—Ç—ã, –∫–æ–Ω—Ñ–∏–≥–∏. –ù–µ –¥—Ä–æ–±–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏—Ç–µ—Ä–∞—Ü–∏–π.
*   –ù–µ –≤—ã–ø–æ–ª–Ω—è–π –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∫–∏ –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏.
*   –ï—Å–ª–∏ –ø–æ –ª–æ–≥–∞–º –∑–∞–ø—É—Å–∫ –ø—Ä–æ—à—ë–ª –±–µ–∑ —è–≤–Ω—ã—Ö –æ—à–∏–±–æ–∫ ‚Äî —ç—Ç–æ —É—Å–ø–µ—Ö. –í–æ–∑–≤—Ä–∞—â–∞–π `done_summary` –∏ `–ì–û–¢–û–í–û`.
*   –ï—Å–ª–∏ —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π ‚Äî –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–µ—Ä–Ω–∏ –±–ª–æ–∫ `verify_run` –≤ —ç—Ç–æ–º –∂–µ –æ—Ç–≤–µ—Ç–µ.

–ï–°–õ–ò –í –ü–†–û–ï–ö–¢–ï –ù–ï–¢ –ö–û–ú–ê–ù–î–´ –ó–ê–ü–£–°–ö–ê (verify):
*   –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π `verify_run`.
*   –ï—Å–ª–∏ —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ ‚Äî –≤–µ—Ä–Ω–∏ `done_summary` –∏ —Å–ª–æ–≤–æ `–ì–û–¢–û–í–û` —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–∞–≤–æ–∫.
*   –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω ‚Äî —Å–æ–∫—Ä–∞—Ç–∏ –æ–±—ä—ë–º –ø—Ä–∞–≤–æ–∫ –∏ —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä—É–π –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏, –Ω–æ –±–µ–∑ –ø–æ–ø—ã—Ç–æ–∫ –∑–∞–ø—É—Å–∫–∞.

–û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –û–ë–™–Å–ú–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô –ó–ê –ò–¢–ï–†–ê–¶–ò–Æ (–≤–∞–∂–Ω–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏):
*   –í –æ–¥–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏—Å—ã–ª–∞–π —Å—É–º–º–∞—Ä–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ –¥–æ 500‚Äì600 —Å—Ç—Ä–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
*   –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –±–æ–ª—å—à–æ–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ ‚Äî –ø—Ä–∏—Å—ã–ª–∞–π –æ–¥–∏–Ω –∫—Ä—É–ø–Ω—ã–π —Ñ–∞–π–ª –∑–∞ –∏—Ç–µ—Ä–∞—Ü–∏—é (–¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω >600 —Å—Ç—Ä–æ–∫). –í —ç—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º–µ–Ω—è—Ç—å —Å–ª–µ–¥—É–µ—Ç –¢–û–õ–¨–ö–û —ç—Ç–æ—Ç —Ñ–∞–π–ª; –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä—É–π –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏.
*   –ï—Å–ª–∏ –ø—Ä–∞–≤–æ–∫ –±–æ–ª—å—à–µ ‚Äî —Ä–∞—Å–ø–∏—à–∏ –±–∞—Ç—á–∏ –ø–æ –∏—Ç–µ—Ä–∞—Ü–∏—è–º –∏ –≤–µ–¥–∏ –∫—Ä–∞—Ç–∫–∏–π —É—á—ë—Ç –≤ `summary` (–Ω–∞–ø—Ä.: ¬´–®–∞–≥ 1/3: –æ–±–Ω–æ–≤–∏–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç. –î–∞–ª—å—à–µ: —Ä–æ—É—Ç—ã, –∑–∞—Ç–µ–º —Ñ—Ä–æ–Ω—Ç.¬ª).
*   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∫—Ä–∏—Ç–∏—á–Ω—ã–µ/–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äî –ø–µ—Ä–≤—ã–º–∏.

–û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ì–û–¢–û–í–ù–û–°–¢–ò (Definition of Done):
*   –°—á–∏—Ç–∞–π –∑–∞–¥–∞—á—É —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π `done_summary` + —Å–ª–æ–≤–æ `–ì–û–¢–û–í–û`, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –í–°–ï —É—Å–ª–æ–≤–∏—è –Ω–∏–∂–µ (–∞–¥–∞–ø—Ç–∏—Ä—É–π –ø–æ–¥ —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞):
    - 1) Verify-–∫–æ–º–∞–Ω–¥–∞ (–∏–ª–∏ —Ç–µ—Å—Ç/—Å–∫—Ä–∏–ø—Ç) –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ –±–µ–∑ —è–≤–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏/—Ä–∞–Ω—Ç–∞–π–º–∞ –≤ –ª–æ–≥–∞—Ö.
    - 2) –î–ª—è –≤–µ–±/API: –∫–ª—é—á–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏–ª–∏ health-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–≤–µ—á–∞–µ—Ç (–¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å dev-—Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É ‚Äî —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞).
    - 3) –î–ª—è –Ω–µ‚Äë–≤–µ–± (CLI/–±–∏–±–ª–∏–æ—Ç–µ–∫–∏): –∫–æ—Ä–æ—Ç–∫–∏–π smoke‚Äë–∑–∞–ø—É—Å–∫ (`--version`, –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç) –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫.
    - 4) –ù–µ—Ç –Ω–µ—Ä–µ—à—ë–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –∑–∞–ø—É—Å–∫–∞.

–ü–û–†–Ø–î–û–ö –í–ù–ï–°–ï–ù–ò–Ø –ò–ó–ú–ï–ù–ï–ù–ò–ô (—á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏–π—Ç–∏ –∫ –ì–û–¢–û–í–û):
1) –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤–µ–¥–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –∏ —Ç–∏–ø—ã: —Å—Ö–µ–º—ã –ë–î/Prisma/DTO/TS‚Äë—Ç–∏–ø—ã/–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.
2) –ó–∞—Ç–µ–º –æ–±–Ω–æ–≤–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã/—Ä–æ—É—Ç—ã/–±–∏–∑–Ω–µ—Å‚Äë–ª–æ–≥–∏–∫—É –ø–æ–¥ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç.
3) –ò —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–ª—è–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥/–∫–ª–∏–µ–Ω—Ç–æ–≤ (RTK Query/React/Django templates –∏ —Ç.–ø.).
4) –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ verify –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ—à–∏–±–æ–∫ ‚Äî —Å—Ä–∞–∑—É `done_summary`.

–§–û–†–ú–ê–¢ –ë–õ–û–ö–û–í:
*   write_file ‚Äî –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ü–∏—à–∏ –∫–æ–Ω–µ—á–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–±–µ–∑ –¥–∏—Ñ—Ñ–æ–≤). –ï—Å–ª–∏ —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω.
*   bash ‚Äî –Ω–∞–±–æ—Ä –∫–æ–º–∞–Ω–¥ –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞, –ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫–µ.
*   verify_run ‚Äî –º–∞—Ä–∫–µ—Ä, —á—Ç–æ –ø–æ—Å–ª–µ —Ç–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å–ª–µ–¥—É–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É.

**–ö–ê–ö –ê–ù–ê–õ–ò–ó–ò–†–û–í–ê–¢–¨ –õ–û–ì–ò –ó–ê–ü–£–°–ö–ê:**
*   **–ò—â–∏ —è–≤–Ω—ã–µ –æ—à–∏–±–∫–∏:** `Traceback`, `Error`, `SyntaxError`, `failed`, `Cannot find module` –∏ —Ç.–ø. –ï—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å ‚Äî —ç—Ç–æ –ø—Ä–æ–≤–∞–ª, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å.
*   **–û—Ü–µ–Ω–∏–≤–∞–π —Ç–∞–π–º–∞—É—Ç –ü–†–ê–í–ò–õ–¨–ù–û:** –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –ø–æ —Ç–∞–π–º–∞—É—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, `exit code -9` –∏–ª–∏ `124`), –Ω–æ –≤ `STDOUT` –∏–ª–∏ `STDERR` –Ω–µ—Ç —è–≤–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏/–∑–∞–ø—É—Å–∫–∞, **–≠–¢–û –°–ß–ò–¢–ê–ï–¢–°–Ø –£–°–ü–ï–•–û–ú**. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, dev-—Å–µ—Ä–≤–µ—Ä) —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ —Ä–∞–±–æ—Ç–∞–ª, –ø–æ–∫–∞ –µ–≥–æ –Ω–µ –ø—Ä–µ—Ä–≤–∞–ª–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫, –ø–∏—à–∏ `–ì–û–¢–û–í–û`.
*   **–£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –æ—à–∏–±–æ–∫:** –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º `0` –∏ –≤ –ª–æ–≥–∞—Ö –Ω–µ—Ç –æ—à–∏–±–æ–∫, —ç—Ç–æ —Ç–æ–∂–µ —É—Å–ø–µ—Ö.
"""

def get_initial_prompt(context, task, fix_history=None, boundary=None):
    rules = _get_execution_prompt_rules(boundary)
    history_prompt_section = ""
    if fix_history:
        history_prompt_section = f"""
--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ï–ì–û –†–ï–®–ï–ù–ò–Ø, –ö–û–¢–û–†–û–ï –û–ö–ê–ó–ê–õ–û–°–¨ –ù–ï–í–ï–†–ù–´–ú ---
{fix_history}
--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ—é –ø—Ä–æ—à–ª—É—é –æ—à–∏–±–∫—É –∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ.
"""
    return f"""{rules}
{history_prompt_section}
--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–ü–û–õ–ù–´–ô –ò–õ–ò –ß–ê–°–¢–ò–ß–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---
–ó–∞–¥–∞—á–∞: {task}
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –æ—Ç–≤–µ—Ç, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –ø—Ä–∞–≤–∏–ª–∞–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è.
"""

def get_review_prompt(context, goal, iteration_count, attempt_history, boundary=None):
    return f"""{_get_execution_prompt_rules(boundary)}

**–¶–ï–õ–¨:** –ü—Ä–æ–≤–µ–¥–∏ –æ—Å–º–æ—Ç—Ä –∫–æ–¥–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –¥–æ—Ä–∞–±–æ—Ç–∫—É –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–µ–π—Å—Ç–≤–∏–π. –ò–∑–±–µ–≥–∞–π –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º–∞.

–ï—Å–ª–∏ —Ü–µ–ª—å —É–∂–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ ‚Äî –≤–µ—Ä–Ω–∏ `done_summary` –∏ `–ì–û–¢–û–í–û`.

–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∞ ‚Äî –≤–µ—Ä–Ω–∏ –∫–æ–Ω—Å–æ–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –ø—Ä–∞–≤–æ–∫:
*   –û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ `write_file` —Å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ (–±–µ–∑ –º–∏–∫—Ä–æ—à–∞–≥–æ–≤).
*   –ü–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–¥–∏–Ω `bash`.
*   –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤—å `verify_run` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.

–î–ª—è —Å–∞–º–æ‚Äë–∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ–±–∞–≤—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –Ω–∞–º–µ—Ä–µ–Ω –º–µ–Ω—è—Ç—å –Ω–∞ –≠–¢–û–ô –∏—Ç–µ—Ä–∞—Ü–∏–∏ (–¥–ª—è —Ç–µ–±—è, –æ–Ω –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è):
```files_to_change
path/to/file1
path/to/file2
```
–ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –∏—Ç–µ—Ä–∞—Ü–∏—è–º–∏ –∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –æ—à–∏–±–æ–∫ ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å –∏ –≤–µ—Ä–Ω–∏ `done_summary`.

--- –ü–ê–ú–Ø–¢–ö–ê –ü–†–û –ò–°–¢–û–†–ò–Æ ---
–ò—Å–ø–æ–ª—å–∑—É–π –∫—Ä–∞—Ç–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–æ–≤ –∏ –º–∏–∫—Ä–æ‚Äë–∏–∑–º–µ–Ω–µ–Ω–∏–π:
{attempt_history}

{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

–ù–∞–ø–æ–º–∏–Ω–∞—é –ò–°–•–û–î–ù–£–Æ –¶–ï–õ–¨: {goal}
"""

def get_error_fixing_prompt(failed_command, error_message, goal, context, iteration_count, attempt_history, boundary=None):
    rules = _get_execution_prompt_rules(boundary)
    iteration_info = ""
    if iteration_count >= 4:
        iteration_info = f"\n**–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï (–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}):** –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî –ø–æ–¥—É–º–∞–π —à–∏—Ä–µ –∏ –∏—Å–ø—Ä–∞–≤—å –µ—ë –Ω–∞–¥—ë–∂–Ω–æ.\n"
    history_info = ""
    if attempt_history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            "\n---\n".join(attempt_history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{rules}
{iteration_info}
{history_info}
**–í–ê–ñ–ù–û:** –ò—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫—É. –ù–µ –ø–∏—à–∏ `–ì–û–¢–û–í–û`.

--- –î–ê–ù–ù–´–ï –û–ë –û–®–ò–ë–ö–ï ---
–ö–û–ú–ê–ù–î–ê: {failed_command}
–°–û–û–ë–©–ï–ù–ò–ï (stderr): {error_message}
--- –ö–û–ù–ï–¶ –î–ê–ù–ù–´–• –û–ë –û–®–ò–ë–ö–ï ---

–ò—Å—Ö–æ–¥–Ω–∞—è –¶–ï–õ–¨ –±—ã–ª–∞: {goal}

–î–∞–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ `summary`.

--- –ö–û–ù–¢–ï–ö–°–¢, –ì–î–ï –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---
"""

def get_log_analysis_prompt(context, goal, history, logs, boundary=None):
    rules = _get_execution_prompt_rules(boundary)
    history_info = ""
    if history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            str(history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{rules}

–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ —Ä–µ–∂–∏–º–µ –ê–ù–ê–õ–ò–ó–ê –õ–û–ì–û–í (—ç—Ç—É —Å—Ç–∞–¥–∏—é –≤—ã–ø–æ–ª–Ω—è–µ—Ç –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å). –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—É—Å–∫–∞–ª–∞—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ 10 —Å–µ–∫—É–Ω–¥ –∏ –∑–∞—Ç–µ–º —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª–∞—Å—å. –ü—Ä–æ–≤–∞–ª–æ–º —Å—á–∏—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ:
* —è–≤–Ω—ã–µ –æ—à–∏–±–∫–∏ (Traceback/Error/SyntaxError/failed/Cannot find module –∏ —Ç.–ø.),
* –∏–ª–∏ –ª–æ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É—é—Ç –æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ü–µ–ª–∏.

–í –≠–¢–û–ô –°–¢–ê–î–ò–ò –ó–ê–ü–†–ï–©–ï–ù–û –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥. –î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–≤–∞ –∏—Å—Ö–æ–¥–∞:
1) –ï—Å–ª–∏ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ ‚Äî –≤–µ—Ä–Ω–∏ –±–ª–æ–∫ `done_summary` –∏ –Ω–∞–ø–∏—à–∏ —Å–ª–æ–≤–æ `–ì–û–¢–û–í–û`.
2) –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –≤–µ—Ä–Ω–∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π `summary` —Å –¥–∏–∞–≥–Ω–æ–∑–æ–º (—á—Ç–æ –Ω–µ —Ç–∞–∫ –≤ –ª–æ–≥–∞—Ö) –∏ –ß–¢–û –¥–æ–ª–∂–Ω–∞ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞—Ä—à–∞—è –º–æ–¥–µ–ª—å –≤ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏. –ù–∏–∫–∞–∫–∏—Ö `write_file`/`bash`/`verify_run` –∑–¥–µ—Å—å –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–π.

{history_info}
--- –õ–û–ì–ò –ó–ê–ü–£–°–ö–ê ---
{logs}
--- –ö–û–ù–ï–¶ –õ–û–ì–û–í ---

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–û–ë–ù–û–í–õ–Å–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

–ò—Å—Ö–æ–¥–Ω–∞—è –¶–ï–õ–¨: {goal}
"""

def get_context_prep_prompt(context_chunk: str, goal: str, boundary: str | None = None) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ç–∞–¥–∏–∏ "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞". –ó–∞–¥–∞—á–∞ –º–æ–¥–µ–ª–∏: –ù–ï —Ä–µ—à–∞—Ç—å —Ü–µ–ª—å,
    –∞ –ñ–ê–î–ù–û —Å–æ–±—Ä–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã.

    –û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:
    ```files
    path/to/file1
    path/to/file2
    ...
    ```
    –ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤, –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.
    """
    rules = (
        "–¢—ã –≤—ã–ø–æ–ª–Ω—è–µ—à—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞–¥–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ù–ï —Ä–µ—à–∞–π –∑–∞–¥–∞—á—É. "
        "–¢–≤–æ—è —Ü–µ–ª—å ‚Äî –∂–∞–¥–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã. "
        "–ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è ‚Äî –≤–∫–ª—é—á–∞–π —Ñ–∞–π–ª. –î–∞–ª—å–Ω–µ–π—à–∞—è —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª–∏."
    )
    return f"""{rules}

–ò—Å—Ö–æ–¥–Ω–∞—è –¶–ï–õ–¨:
{goal}

--- –ö–£–°–û–ö –ö–û–ù–¢–ï–ö–°–¢–ê (—Ñ–∞–π–ª—ã –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ) ---
{context_chunk}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

–í—ã–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –≤ –±–ª–æ–∫–µ ```files```. –ü—É—Ç–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞.
"""

planning_rules = f"""
–¢—ã ‚Äî AI-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø–æ–Ω—è—Ç–Ω–∞.

**–ü–†–ê–í–ò–õ–ê –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø:**

1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞.
2. –î–≤–∞ –ø—É—Ç–∏:
        *   –î–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π: ````summary ... ```` –∏–ª–∏ ````done_summary ... ````

2.  **–ü–†–ê–í–ò–õ–û –ü–£–¢–ï–ô (–°–ê–ú–û–ï –í–ê–ñ–ù–û–ï!):**
    *   –í—Å–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å (–≤ –±–ª–æ–∫–∞—Ö `files`, `write_file`, `bash`), –î–û–õ–ñ–ù–´ –±—ã—Ç—å **–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**.
    *   **–ö–ê–¢–ï–ì–û–†–ò–ß–ï–°–ö–ò –ó–ê–ü–†–ï–©–ï–ù–û** –Ω–∞—á–∏–Ω–∞—Ç—å –ø—É—Ç—å —Å –∏–º–µ–Ω–∏ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.
    *   **–ü—Ä–∏–º–µ—Ä:** –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ `/path/to/my-project`, –∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Ñ–∞–π–ª `src/app.js`:
        *   **–ü–†–ê–í–ò–õ–¨–ù–û:** `src/app.js`
        *   **–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:** `my-project/src/app.js`
    *   –î–ª—è –±–ª–æ–∫–∞ `write_file` –ø—É—Ç—å –æ–±—è–∑–∞–Ω —É–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Å—Ç—Ä–æ–≥–æ –≤ –∞—Ç—Ä–∏–±—É—Ç–µ: `path="relative/path/to/file"`.
    *   –ó–∞–ø—Ä–µ—â–µ–Ω–æ: –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ (`/...`), `~`, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ `..`, –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª—ç—à–∏ \, –ø—Ä–æ–±–µ–ª—ã –≤ –ø—É—Ç–∏, –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
    *   –ü—É—Ç—å –Ω–µ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∏–º–µ–Ω–∏ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.
    *   –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –ø—É—Ç–∏: –ª–∞—Ç–∏–Ω–∏—Ü–∞/—Ü–∏—Ñ—Ä—ã/`_`/`-`/`.` –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å `/`.

3.  **–†–∞–±–æ—á–∞—è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:** –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∏–∑ **–∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**. **–ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `cd`.

4.  **–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã:** `{', '.join(ALLOWED_COMMANDS)}`. –ö–æ–º–∞–Ω–¥—ã, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω—ã –≤ –±–ª–æ–∫ ```manual```.

5.  **–§–æ–∫—É—Å –∏ –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º:** –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —Ä–µ—à–∏—Ç—å **–∏—Å—Ö–æ–¥–Ω—É—é –∑–∞–¥–∞—á—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –∑–∞–Ω–∏–º–∞–π—Å—è –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º–æ–º: –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–π —Å—Ç–∏–ª—å –∫–æ–¥–∞ –∏ –Ω–µ –¥–µ–ª–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∑–∞–¥–∞—á–µ–π.

6.  **–ü–†–ê–í–ò–õ–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø (–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û):**
     *   –¢—ã –º–æ–∂–µ—à—å –∏ –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–ª—è—Ç—å –ª–æ–≥–∏ (`print`, `console.log` –∏ —Ç.–ø.) –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
     *   **–ó–ê–ü–†–ï–©–ï–ù–û** –¥–æ–±–∞–≤–ª—è—Ç—å –õ–Æ–ë–û–ô –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ `[SLOTHLOG]`. –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–∏—à–µ—à—å, **–û–ë–Ø–ó–ê–ù** –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å `[SLOTHLOG]`.
     *   **–ü—Ä–∏–º–µ—Ä –ü–†–ê–í–ò–õ–¨–ù–û:** `print(f"[SLOTHLOG] Variable foo: {{foo}}")`
     *   **–ü—Ä–∏–º–µ—Ä –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:** `print(f"Variable foo: {{foo}}")`
     *   –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ, –∏—Å–∫–ª—é—á–µ–Ω–∏–π –Ω–µ—Ç.
"""

def get_initial_planning_prompt(context, task, boundary=None):
    return f"""{planning_rules}
{global_rules}

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–°–û–ö–†–ê–©–ï–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

--- –ó–ê–î–ê–ß–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
{task}
--- –ö–û–ù–ï–¶ –ó–ê–î–ê–ß–ò ---

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç. –°–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º —ç—Ç–∞–ø–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""