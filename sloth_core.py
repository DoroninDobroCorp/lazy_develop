# –§–∞–π–ª: sloth_core.py
"""
–Ø–¥—Ä–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Gemini (Google AI / Vertex AI) –¥–ª—è Sloth.

–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ç–≤–æ–µ–π –≤–µ—Ä—Å–∏–µ–π:
- –ë–û–õ–¨–®–ï –ù–ï –ó–ê–î–ê–Å–¢–°–Ø max_output_tokens ‚Üí –æ—Ç–¥–∞—ë–º –º–æ–¥–µ–ª–∏ –ø—Ä–∞–≤–æ –ø–∏—Å–∞—Ç—å –º–∞–∫—Å–∏–º—É–º.
- –î–æ–±–∞–≤–ª–µ–Ω thinking budget (–±—é–¥–∂–µ—Ç –Ω–∞ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è), –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω:
  * –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤–æ–≥–æ SDK google-genai: —á–µ—Ä–µ–∑ GenerateContentConfig(thinking_config=ThinkingConfig(...))
  * –í Vertex AI: —á–µ—Ä–µ–∑ GenerationConfig(thinking_config=ThinkingConfig(...))
  * –í —Å—Ç–∞—Ä–æ–º google.generativeai thinking –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –ø–µ—á–∞—Ç–∞—é –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥.
- –û—Ç–≤–µ—Ç —Å–æ–±–∏—Ä–∞—é –Ω–∞–¥—ë–∂–Ω–æ (response.text, –ª–∏–±–æ parts), usage —Å—á–∏—Ç—ã–≤–∞—é –±–µ—Ä–µ–∂–Ω–æ —Å –∑–∞–ø–∞—Å–Ω—ã–º–∏ –≤–µ—Ç–∫–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:
- –ó–Ω–∞—á–µ–Ω–∏–µ –±—é–¥–∂–µ—Ça —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∑—è–ª 24576 —Ç–æ–∫–µ–Ω–æ–≤, —Ç.–∫. —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–µ–¥–µ–ª,
  —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å 2.5-—Å–µ—Ä–∏–µ–π –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å env SLOTH_THINKING_BUDGET.
"""

import os
from colors import Colors

# --- –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π Google GenAI SDK (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ) ---
HAS_GOOGLE_GENAI = False
try:
    from google import genai as genai_new
    from google.genai.types import GenerateContentConfig, ThinkingConfig
    HAS_GOOGLE_GENAI = True
except Exception:
    genai_new = None
    GenerateContentConfig = None
    ThinkingConfig = None
    HAS_GOOGLE_GENAI = False

# --- –°—Ç–∞—Ä—ã–π SDK (fallback, –±–µ–∑ thinking budget) ---
HAS_LEGACY_GENAI = False
try:
    import google.generativeai as genai_legacy
    HAS_LEGACY_GENAI = True
except Exception:
    genai_legacy = None
    HAS_LEGACY_GENAI = False

# --- Vertex AI SDK ---
import vertexai
from vertexai.generative_models import GenerativeModel, HarmCategory, HarmBlockThreshold
# –≠—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö –ø–∞–∫–µ—Ç–∞; –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º—è–≥–∫–æ
try:
    from vertexai.generative_models import GenerationConfig as VertexGenerationConfig  # —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
except Exception:
    VertexGenerationConfig = None
try:
    from vertexai.generative_models import ThinkingConfig as VertexThinkingConfig     # thinking –∫–æ–Ω—Ñ–∏–≥
except Exception:
    VertexThinkingConfig = None

# --- –ù–ê–°–¢–†–û–ô–ö–ò –Ø–î–†–ê ---
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY", "REDACTED_GOOGLE_API_KEY")
GOOGLE_CLOUD_PROJECT = os.getenv("GOOGLE_CLOUD_PROJECT", "useful-gearbox-464618-v3")
GOOGLE_CLOUD_LOCATION = os.getenv("GOOGLE_CLOUD_LOCATION", "us-central1")
MODEL_NAME = os.getenv("SLOTH_MODEL_NAME", "gemini-2.5-pro")
API_TIMEOUT_SECONDS = int(os.getenv("SLOTH_API_TIMEOUT", "600"))

# –í–ê–ñ–ù–û: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±—é–¥–∂–µ—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ env SLOTH_THINKING_BUDGET
THINKING_BUDGET_TOKENS = int(os.getenv("SLOTH_THINKING_BUDGET", "24576"))

# –ö–æ–º–∞–Ω–¥—ã-–∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è bash
ALLOWED_COMMANDS = (
    "rm", "mv", "touch", "mkdir", "npm", "npx", "yarn", "pnpm", "git", "echo", "./"
)

MODEL_PRICING = {
    "gemini-2.5-pro": {
        "input": {"tiers": [{"up_to": 200000, "price": 1.25}, {"up_to": float('inf'), "price": 2.50}]},
        "output": {"tiers": [{"up_to": 200000, "price": 10.00}, {"up_to": float('inf'), "price": 15.00}]}
    },
    "gemini-1.5-pro-latest": {
        "input": {"tiers": [{"up_to": float('inf'), "price": 3.50}]},
        "output": {"tiers": [{"up_to": float('inf'), "price": 10.50}]}
    }
}

# --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è API ---
model = None  # –≤ —Ä–µ–∂–∏–º–µ google-genai –∑–¥–µ—Å—å –±—É–¥–µ—Ç client, –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äî –æ–±—ä–µ–∫—Ç –º–æ–¥–µ–ª–∏
ACTIVE_API_SERVICE = "N/A"
GOOGLE_AI_HAS_FAILED_THIS_SESSION = False

# –ë–∞–∑–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ‚Äî –ë–ï–ó max_output_tokens!
GENERATION_TEMPERATURE = float(os.getenv("SLOTH_TEMPERATURE", "1"))
GENERATION_TOP_P = float(os.getenv("SLOTH_TOP_P", "1"))
GENERATION_TOP_K = int(float(os.getenv("SLOTH_TOP_K", "1")))

def _log_generation_params():
    print(
        f"{Colors.CYAN}üîß –õ–û–ì: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:"
        f" temperature={GENERATION_TEMPERATURE}, top_p={GENERATION_TOP_P}, top_k={GENERATION_TOP_K}."
        f" max_output_tokens –ù–ï –∑–∞–¥–∞–Ω –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ.{Colors.ENDC}"
    )
    print(
        f"{Colors.CYAN}üß© –õ–û–ì: –ë—é–¥–∂–µ—Ç —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π (thinking_budget) = {THINKING_BUDGET_TOKENS} —Ç–æ–∫–µ–Ω–æ–≤, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è SDK/–º–æ–¥–µ–ª—å.{Colors.ENDC}"
    )

def initialize_model():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–µ—Ä–≤–∏—Å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º:
    1) Google GenAI SDK (api key) ‚Üí thinking_config –¥–æ—Å—Ç—É–ø–µ–Ω
    2) –°—Ç–∞—Ä—ã–π google.generativeai (api key) ‚Üí thinking_config –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    3) Vertex AI SDK (ADC/Service Account) ‚Üí thinking_config –¥–æ—Å—Ç—É–ø–µ–Ω
    """
    global model, ACTIVE_API_SERVICE, GOOGLE_AI_HAS_FAILED_THIS_SESSION

    print(f"{Colors.CYAN}‚öôÔ∏è  –õ–û–ì: –ù–∞—á–∏–Ω–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é. –ú–æ–¥–µ–ª—å: {MODEL_NAME}{Colors.ENDC}")
    _log_generation_params()

    # --- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –Ω–æ–≤—ã–π Google GenAI SDK (api key) ---
    if GOOGLE_API_KEY and HAS_GOOGLE_GENAI and not GOOGLE_AI_HAS_FAILED_THIS_SESSION:
        print(f"{Colors.CYAN}üîë –õ–û–ì: –ü—Ä–æ–±—É—é Google GenAI SDK (–ø–æ API-–∫–ª—é—á—É).{Colors.ENDC}")
        try:
            model = genai_new.Client(api_key=GOOGLE_API_KEY)
            # –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ã–∑–æ–≤ (–Ω–µ –∑–∞–¥–∞—ë–º max_output_tokens)
            _ = model.models.generate_content(
                model=MODEL_NAME,
                contents="ping"
            )
            ACTIVE_API_SERVICE = "Google GenAI SDK"
            print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –£—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ {ACTIVE_API_SERVICE}.{Colors.ENDC}")
            return
        except Exception as e:
            print(f"{Colors.WARNING}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –°–±–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GenAI SDK: {e}{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            model = None

    # --- Fallback: —Å—Ç–∞—Ä—ã–π google.generativeai (api key) ---
    if GOOGLE_API_KEY and HAS_LEGACY_GENAI and not model:
        print(f"{Colors.CYAN}üîë –õ–û–ì: –ü—Ä–æ–±—É—é —Å—Ç–∞—Ä—ã–π google.generativeai (API Key).{Colors.ENDC}")
        try:
            genai_legacy.configure(api_key=GOOGLE_API_KEY)
            # –í–ê–ñ–ù–û: generation_config –±–µ–∑ max_output_tokens
            generation_config = {
                "temperature": GENERATION_TEMPERATURE,
                "top_p": GENERATION_TOP_P,
                "top_k": GENERATION_TOP_K,
            }
            model = genai_legacy.GenerativeModel(
                model_name=MODEL_NAME,
                generation_config=generation_config,
                safety_settings={
                    'HARM_CATEGORY_HARASSMENT': 'block_medium_and_above',
                    'HARM_CATEGORY_HATE_SPEECH': 'block_medium_and_above',
                    'HARM_CATEGORY_SEXUALLY_EXPLICIT': 'block_medium_and_above',
                    'HARM_CATEGORY_DANGEROUS_CONTENT': 'block_none',
                }
            )
            # –ü—Ä–æ–±–Ω—ã–π –≤—ã–∑–æ–≤
            model.generate_content("test", request_options={"timeout": 60})
            ACTIVE_API_SERVICE = "Google AI (Legacy SDK)"
            print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ {ACTIVE_API_SERVICE} —É—Å–ø–µ—à–Ω–∞.{Colors.ENDC}")
            print(f"{Colors.WARNING}‚ÑπÔ∏è  –õ–û–ì: –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ thinking_budget –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É—é —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 'google-genai'.{Colors.ENDC}")
            return
        except Exception as e:
            print(f"{Colors.WARNING}‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–π SDK: {e}{Colors.ENDC}")
            model = None

    # --- –†–µ–∑–µ—Ä–≤: Vertex AI (ADC/Service Account) ---
    print(f"{Colors.CYAN}üî© –õ–û–ì: –ü—ã—Ç–∞—é—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Vertex AI SDK...{Colors.ENDC}")
    try:
        vertexai.init(project=GOOGLE_CLOUD_PROJECT, location=GOOGLE_CLOUD_LOCATION)

        # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –±–µ–∑ max_output_tokens
        vertex_gen_conf = {
            "temperature": GENERATION_TEMPERATURE,
            "top_p": GENERATION_TOP_P,
            "top_k": GENERATION_TOP_K,
        }

        # –î–æ–±–∞–≤–∏–º thinking_config, –µ—Å–ª–∏ –∫–ª–∞—Å—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ SDK
        if VertexThinkingConfig is not None:
            try:
                vertex_gen_conf = VertexGenerationConfig(
                    temperature=GENERATION_TEMPERATURE,
                    top_p=GENERATION_TOP_P,
                    top_k=GENERATION_TOP_K,
                    thinking_config=VertexThinkingConfig(thinking_budget=THINKING_BUDGET_TOKENS),
                )
            except Exception:
                # –ï—Å–ª–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ–¥–∞–¥–∏–º —Å–ª–æ–≤–∞—Ä—å (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç dict)
                vertex_gen_conf = {
                    "temperature": GENERATION_TEMPERATURE,
                    "top_p": GENERATION_TOP_P,
                    "top_k": GENERATION_TOP_K,
                    "thinking_config": {"thinking_budget": THINKING_BUDGET_TOKENS},
                }

        model = GenerativeModel(
            model_name=MODEL_NAME,
            generation_config=vertex_gen_conf,
            safety_settings={
                HarmCategory.HARM_CATEGORY_HARASSMENT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_HATE_SPEECH: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
                HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT: HarmBlockThreshold.BLOCK_NONE,
            }
        )
        ACTIVE_API_SERVICE = "Vertex AI"
        # –ü—Ä–æ–±–Ω—ã–π –≤—ã–∑–æ–≤
        _ = model.generate_content("ping")
        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: Vertex AI SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.{Colors.ENDC}")
    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å: {e}{Colors.ENDC}")
        model = None
        ACTIVE_API_SERVICE = "N/A"

def get_active_service_details():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å/–∫–ª–∏–µ–Ω—Ç –∏ –∏–º—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞."""
    return model, ACTIVE_API_SERVICE

def _extract_text_and_usage_from_genai_response(resp):
    # –ü—ã—Ç–∞–µ–º—Å—è –≤–∑—è—Ç—å —Ç–µ–∫—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –Ω–∞–¥—ë–∂–Ω–æ
    full_text = getattr(resp, "text", None)
    if not full_text:
        try:
            # google-genai –∏–Ω–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç candidates
            cands = getattr(resp, "candidates", None) or []
            parts_text = []
            for c in cands:
                try:
                    ct = getattr(c, "content", None)
                    if ct and getattr(ct, "parts", None):
                        for p in ct.parts:
                            t = getattr(p, "text", None)
                            if t:
                                parts_text.append(t)
                except Exception:
                    pass
            full_text = "".join(parts_text) if parts_text else ""
        except Exception:
            full_text = ""

    # usage
    prompt_tokens = 0
    output_tokens = 0
    try:
        um = getattr(resp, "usage_metadata", None)
        if um:
            prompt_tokens = getattr(um, "prompt_token_count", getattr(um, "input_tokens", 0)) or 0
            output_tokens = getattr(um, "candidates_token_count", getattr(um, "output_tokens", 0)) or 0
    except Exception:
        pass
    return full_text, prompt_tokens, output_tokens

def send_request_to_model(model_instance, active_service, prompt_text, iteration_count=0):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–∫–µ–Ω–∞—Ö."""
    global GOOGLE_AI_HAS_FAILED_THIS_SESSION

    try:
        log_header = f"[–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}]" if iteration_count > 0 else "[–≠—Ç–∞–ø –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è]"
        print(f"{Colors.CYAN}üß† –õ–û–ì: {log_header} –ì–æ—Ç–æ–≤–ª—é –∑–∞–ø—Ä–æ—Å –≤ –º–æ–¥–µ–ª—å ({active_service}).{Colors.ENDC}")
        print(f"{Colors.CYAN}‚è≥ –õ–û–ì: –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å... (—Ç–∞–π–º–∞—É—Ç: {API_TIMEOUT_SECONDS} —Å–µ–∫){Colors.ENDC}")

        if active_service == "Google GenAI SDK":
            # –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç + thinking_config
            cfg = GenerateContentConfig(
                temperature=GENERATION_TEMPERATURE,
                top_p=GENERATION_TOP_P,
                top_k=GENERATION_TOP_K,
                # –∫—Ä–∏—Ç–∏—á–Ω–æ: –Ω–µ –∑–∞–¥–∞—ë–º max_output_tokens
                thinking_config=ThinkingConfig(thinking_budget=THINKING_BUDGET_TOKENS),
            )
            response = model_instance.models.generate_content(
                model=MODEL_NAME,
                contents=prompt_text,
                config=cfg,
            )
            text, in_tok, out_tok = _extract_text_and_usage_from_genai_response(response)

        elif active_service == "Google AI (Legacy SDK)":
            # –°—Ç–∞—Ä—ã–π generativeai; thinking —Ç—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, max_output_tokens –Ω–µ –∑–∞–¥–∞–µ–º
            request_options = {"timeout": API_TIMEOUT_SECONDS}
            response = model_instance.generate_content(prompt_text, request_options=request_options)
            # –°–∫–ª–µ–π–∫–∞ –æ—Ç–≤–µ—Ç–∞
            text = getattr(response, "text", None)
            if not text:
                try:
                    text = "".join(part.text for part in response.parts)
                except Exception:
                    text = str(response)
            # usage
            in_tok = 0
            out_tok = 0
            try:
                um = response.usage_metadata
                in_tok = getattr(um, "prompt_token_count", 0) or 0
                out_tok = getattr(um, "candidates_token_count", 0) or 0
            except Exception:
                pass

        elif active_service == "Vertex AI":
            response = model_instance.generate_content(prompt_text)
            text = getattr(response, "text", None)
            if not text:
                try:
                    text = "".join(part.text for part in response.parts)
                except Exception:
                    text = str(response)
            in_tok = 0
            out_tok = 0
            try:
                um = response.usage_metadata
                in_tok = getattr(um, "prompt_token_count", 0) or 0
                out_tok = getattr(um, "candidates_token_count", 0) or 0
            except Exception:
                pass

        else:
            raise ValueError(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å API: {active_service}")

        if not text:
            raise ValueError("–û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø—É—Å—Ç–æ–π.")

        print(f"{Colors.OKGREEN}‚úÖ –õ–û–ì: –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ.{Colors.ENDC}")
        return {"text": text, "input_tokens": in_tok, "output_tokens": out_tok}

    except Exception as e:
        print(f"{Colors.FAIL}‚ùå –õ–û–ì: –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API ({active_service}): {e}{Colors.ENDC}")
        # –ê–≤—Ç–æ–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ: –ø—Ä–∏ —Å–±–æ–µ GenAI SDK –ø—Ä–æ–±—É–µ–º Vertex
        if active_service == "Google GenAI SDK":
            print(f"{Colors.CYAN}üîÑ –õ–û–ì: –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ Vertex AI –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤...{Colors.ENDC}")
            GOOGLE_AI_HAS_FAILED_THIS_SESSION = True
            initialize_model()
        return None

def get_command_rules(stage='execution', boundary=None):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–∞–ø–∞ (–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ).
    """
    boundary_instr = ""
    if boundary:
        boundary_instr = f"""
**–§–æ—Ä–º–∞—Ç write_file —Å BOUNDARY (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω):**
```write_file path="path/to/file" boundary="{boundary}"
<–ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ–∞–π–ª–∞, –≤ —Ç.—á. —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ ```
 –∏ ```bash –±–ª–æ–∫–∞–º–∏>
{boundary}

–ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –ü–ï–†–ï–î –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º ``` ‚Äî —Ä–æ–≤–Ω–æ {boundary}.
"""

    base_rules = f"""
**–ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´ –ö –ò–°–ü–û–õ–ù–ï–ù–ò–Æ):**

1.  **–ü–†–ê–í–ò–õ–û –ü–£–¢–ï–ô (–°–ê–ú–û–ï –í–ê–ñ–ù–û–ï!):**
    *   –í—Å–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å (–≤ –±–ª–æ–∫–∞—Ö `files`, `write_file`, `bash`), –î–û–õ–ñ–ù–´ –±—ã—Ç—å **–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**.
    *   **–ö–ê–¢–ï–ì–û–†–ò–ß–ï–°–ö–ò –ó–ê–ü–†–ï–©–ï–ù–û** –Ω–∞—á–∏–Ω–∞—Ç—å –ø—É—Ç—å —Å –∏–º–µ–Ω–∏ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞.
    *   **–ü—Ä–∏–º–µ—Ä:** –ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ `/path/to/my-project`, –∏ —Ç–µ–±–µ –Ω—É–∂–µ–Ω —Ñ–∞–π–ª `src/app.js`:
        *   **–ü–†–ê–í–ò–õ–¨–ù–û:** `src/app.js`
        *   **–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:** `my-project/src/app.js`

2.  **–†–∞–±–æ—á–∞—è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:** –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∏–∑ **–∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞**. **–ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `cd`.

3.  **–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã:** `{', '.join(ALLOWED_COMMANDS)}`. –ö–æ–º–∞–Ω–¥—ã, –Ω–µ –≤—Ö–æ–¥—è—â–∏–µ –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫, –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω—ã –≤ –±–ª–æ–∫ ```manual```.

4.  **–§–æ–∫—É—Å –∏ –ü—Ä–∞–≥–º–∞—Ç–∏–∑–º:** –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî —Ä–µ—à–∏—Ç—å **–∏—Å—Ö–æ–¥–Ω—É—é –∑–∞–¥–∞—á—É** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –∑–∞–Ω–∏–º–∞–π—Å—è –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º–æ–º: –Ω–µ –∏—Å–ø—Ä–∞–≤–ª—è–π —Å—Ç–∏–ª—å –∫–æ–¥–∞ –∏ –Ω–µ –¥–µ–ª–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∑–∞–¥–∞—á–µ–π.
"""

    if stage == 'execution':
        return f"""
–¢—ã ‚Äî AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è.

**–ü–†–ê–í–ò–õ–ê –≠–¢–ê–ü–ê –ò–°–ü–û–õ–ù–ï–ù–ò–Ø:**

1.  **–ü–†–ê–í–ò–õ–û ‚Ññ1: –¢–û–õ–¨–ö–û `write_file`**
    *   –î–ª—è **—Å–æ–∑–¥–∞–Ω–∏—è –ù–û–í–´–•** –∏–ª–∏ **–∏–∑–º–µ–Ω–µ–Ω–∏—è –°–£–©–ï–°–¢–í–£–Æ–©–ò–•** —Ñ–∞–π–ª–æ–≤ —Ç—ã **–û–ë–Ø–ó–ê–ù** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—Ç–æ–ª—å–∫–æ** –±–ª–æ–∫ ```write_file```.
    *   –≠—Ç–æ—Ç –±–ª–æ–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª.

2.  **–ü–†–ê–í–ò–õ–û ‚Ññ2: –ü–û–õ–ù–û–¢–ê –ö–û–î–ê (–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û!)**
    *   –í–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ ```write_file``` —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å **–ü–û–õ–ù–û–ï –°–û–î–ï–†–ñ–ò–ú–û–ï** —Ñ–∞–π–ª–∞ –æ—Ç –ø–µ—Ä–≤–æ–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ—á–∫–∏.
    *   **–ö–ê–¢–ï–ì–û–†–ò–ß–ï–°–ö–ò –ó–ê–ü–†–ï–©–ï–ù–û** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã, –º–Ω–æ–≥–æ—Ç–æ—á–∏—è (`...`), –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (`// ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥`) –∏–ª–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∫–æ–¥–∞.

3.  **–§–æ—Ä–º–∞—Ç –û—Ç–≤–µ—Ç–∞:**
    *   **–î–µ–π—Å—Ç–≤–∏—è:** –¢–≤–æ–π –æ—Ç–≤–µ—Ç **–û–ë–Ø–ó–ê–ù** —Å–æ–¥–µ—Ä–∂–∞—Ç—å –û–î–ò–ù –∏–∑ –±–ª–æ–∫–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π –∏ –°–†–ê–ó–£ –ü–û–°–õ–ï –Ω–µ–≥–æ –±–ª–æ–∫ `summary`:
        1.  **–î–ª—è –∫–æ–º–∞–Ω–¥ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞:** ```bash ... ```.
        2.  **–î–ª—è –°–û–ó–î–ê–ù–ò–Ø/–ò–ó–ú–ï–ù–ï–ù–ò–Ø —Ñ–∞–π–ª–∞:** ```write_file path/to/file.py ... ```.
    *   **–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ:** –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞, –Ω–∞–ø–∏—à–∏ **—Ç–æ–ª—å–∫–æ** `–ì–û–¢–û–í–û`, –∑–∞—Ç–µ–º –±–ª–æ–∫ ```done_summary ... ```. –î–ª—è —Ä—É—á–Ω—ã—Ö —à–∞–≥–æ–≤ –¥–æ–±–∞–≤—å –±–ª–æ–∫ ```manual```.

{base_rules}
{boundary_instr}
"""

    if stage == 'planning':
        return f"""
–¢—ã ‚Äî AI-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫. –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞ ‚Äî —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∏—Å—Ö–æ–¥–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø–æ–Ω—è—Ç–Ω–∞.

**–ü–†–ê–í–ò–õ–ê –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø:**

1.  –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ **—Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–π** –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞.
2.  **–î–≤–∞ –ø—É—Ç–∏**:
    *   –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ **–Ω–µ–ø–æ–Ω—è—Ç–Ω–∞** ‚Äî –≤–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ ```clarification ... ```.
    *   –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ **–ø–æ–Ω—è—Ç–Ω–∞** ‚Äî –≤–µ—Ä–Ω–∏ ```plan ... ``` –∏ ```files ... ```.
3.  –ó–∞–ø—Ä–µ—â–µ–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ```bash``` –∏–ª–∏ `write_file` –Ω–∞ —ç—Ç–∞–ø–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.

{base_rules}
{boundary_instr}
"""

def get_clarification_and_planning_prompt(context, task, boundary=None):
    rules = get_command_rules(stage='planning', boundary=boundary)
    return f"""{rules}

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–°–û–ö–†–ê–©–ï–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

--- –ó–ê–î–ê–ß–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ---
{task}
--- –ö–û–ù–ï–¶ –ó–ê–î–ê–ß–ò ---

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç. –°–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º —ç—Ç–∞–ø–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

def get_initial_prompt(context, task, fix_history=None, boundary=None):
    history_prompt_section = ""
    if fix_history:
        history_prompt_section = f"""
--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ï–ì–û –†–ï–®–ï–ù–ò–Ø, –ö–û–¢–û–†–û–ï –û–ö–ê–ó–ê–õ–û–°–¨ –ù–ï–í–ï–†–ù–´–ú ---
{fix_history}
--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ—é –ø—Ä–æ—à–ª—É—é –æ—à–∏–±–∫—É –∏ –Ω–∞—á–Ω–∏ –∑–∞–Ω–æ–≤–æ.
"""
    return f"""{get_command_rules(stage='execution', boundary=boundary)}
{history_prompt_section}
--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–ü–û–õ–ù–´–ô –ò–õ–ò –ß–ê–°–¢–ò–ß–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---
–ó–∞–¥–∞—á–∞: {task}
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∑–∞–¥–∞—á—É –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –æ—Ç–≤–µ—Ç, —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥—É—è –ø—Ä–∞–≤–∏–ª–∞–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è.
"""

def get_review_prompt(context, goal, iteration_count, attempt_history, boundary=None):
    iteration_info = ""
    if iteration_count >= 4:
        iteration_info = f"\n**–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï (–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}):** –°–¥–µ–ª–∞–Ω–æ —É–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–±–ª–µ–º—É –≥–ª—É–±–∂–µ.\n"
    history_info = ""
    if attempt_history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            "\n---\n".join(attempt_history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{get_command_rules(stage='execution', boundary=boundary)}
{iteration_info}
{history_info}
**–í–ê–ñ–ù–û:** –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω. –ö–æ–¥ –Ω–∏–∂–µ ‚Äî —ç—Ç–æ **–æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ** –ø—Ä–æ–µ–∫—Ç–∞.

**–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø:**
1) –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—É—â–∏–π –∫–æ–¥ —Å —É—á—ë—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏.
2) –ï—Å–ª–∏ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ ‚Äî –Ω–∞–ø–∏—à–∏ `–ì–û–¢–û–í–û`.
3) –ò–Ω–∞—á–µ ‚Äî –¥–∞–π —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –∏ `summary`.

--- –ö–û–ù–¢–ï–ö–°–¢ –ü–†–û–ï–ö–¢–ê (–û–ë–ù–û–í–õ–Å–ù–ù–´–ô) ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---

–ù–∞–ø–æ–º–∏–Ω–∞—é –ò–°–•–û–î–ù–£–Æ –¶–ï–õ–¨: {goal}
"""

def get_error_fixing_prompt(failed_command, error_message, goal, context, iteration_count, attempt_history, boundary=None):
    iteration_info = ""
    if iteration_count >= 4:
        iteration_info = f"\n**–û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï (–ò—Ç–µ—Ä–∞—Ü–∏—è {iteration_count}):** –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ ‚Äî –ø–æ–¥—É–º–∞–π —à–∏—Ä–µ –∏ –∏—Å–ø—Ä–∞–≤—å –µ—ë –Ω–∞–¥—ë–∂–Ω–æ.\n"
    history_info = ""
    if attempt_history:
        history_info = (
            "--- –ò–°–¢–û–†–ò–Ø –ü–†–ï–î–´–î–£–©–ò–• –ü–û–ü–´–¢–û–ö ---\n" +
            "\n---\n".join(attempt_history) +
            "\n--- –ö–û–ù–ï–¶ –ò–°–¢–û–†–ò–ò ---\n"
        )
    return f"""{get_command_rules(stage='execution', boundary=boundary)}
{iteration_info}
{history_info}
**–í–ê–ñ–ù–û:** –ò—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫—É. –ù–µ –ø–∏—à–∏ `–ì–û–¢–û–í–û`.

--- –î–ê–ù–ù–´–ï –û–ë –û–®–ò–ë–ö–ï ---
–ö–û–ú–ê–ù–î–ê: {failed_command}
–°–û–û–ë–©–ï–ù–ò–ï (stderr): {error_message}
--- –ö–û–ù–ï–¶ –î–ê–ù–ù–´–• –û–ë –û–®–ò–ë–ö–ï ---

–ò—Å—Ö–æ–¥–Ω–∞—è –¶–ï–õ–¨ –±—ã–ª–∞: {goal}

–î–∞–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–ª–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ `summary`.

--- –ö–û–ù–¢–ï–ö–°–¢, –ì–î–ï –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê ---
{context}
--- –ö–û–ù–ï–¶ –ö–û–ù–¢–ï–ö–°–¢–ê ---
"""
